// <auto-generated />
using System;
using AmazonKiller.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AmazonKiller.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AmazonDbContext))]
    [Migration("20250606112701_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Categories.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.PrimitiveCollection<string>("PropertyKeys")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("49595c91-f315-4b2e-af8a-0f09c3145c03"),
                            Description = "Fashion category",
                            IconName = "hanger",
                            ImageUrl = "https://example.com/images/fashion.jpg",
                            Name = "Fashion",
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("7eb489f4-2f55-4510-8e49-3965370c4989"),
                            Description = "Men's Clothing category",
                            ImageUrl = "https://example.com/images/mens_clothing.jpg",
                            Name = "Men's Clothing",
                            ParentId = new Guid("49595c91-f315-4b2e-af8a-0f09c3145c03"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("69f22c76-7202-44e6-9132-09fd09c55632"),
                            Description = "Women's Clothing category",
                            ImageUrl = "https://example.com/images/womens_clothing.jpg",
                            Name = "Women's Clothing",
                            ParentId = new Guid("49595c91-f315-4b2e-af8a-0f09c3145c03"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("be4e31b6-3b78-4d99-a3fa-7cb8a7bc4a8b"),
                            Description = "Shoes category",
                            ImageUrl = "https://example.com/images/shoes.jpg",
                            Name = "Shoes",
                            ParentId = new Guid("49595c91-f315-4b2e-af8a-0f09c3145c03"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("3b464a7d-878c-4b8b-b44f-c78a2b59be3a"),
                            Description = "Accessories category",
                            ImageUrl = "https://example.com/images/accessories.jpg",
                            Name = "Accessories",
                            ParentId = new Guid("49595c91-f315-4b2e-af8a-0f09c3145c03"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("7ad3d843-1642-4e8a-a843-503928ef8154"),
                            Description = "Electronics category",
                            IconName = "computer",
                            ImageUrl = "https://example.com/images/electronics.jpg",
                            Name = "Electronics",
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d2deb989-35c5-4ca1-a748-12411d3ac3a4"),
                            Description = "Smartphones category",
                            ImageUrl = "https://example.com/images/smartphones.jpg",
                            Name = "Smartphones",
                            ParentId = new Guid("7ad3d843-1642-4e8a-a843-503928ef8154"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("22e7ee0d-8962-482b-857d-43ba828de1ff"),
                            Description = "Laptops category",
                            ImageUrl = "https://example.com/images/laptops.jpg",
                            Name = "Laptops",
                            ParentId = new Guid("7ad3d843-1642-4e8a-a843-503928ef8154"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("8fc8707d-97d7-41a1-9c31-50f07b8466f4"),
                            Description = "Cameras category",
                            ImageUrl = "https://example.com/images/cameras.jpg",
                            Name = "Cameras",
                            ParentId = new Guid("7ad3d843-1642-4e8a-a843-503928ef8154"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("c1cd879d-175e-4ff5-b354-054f9f82ce98"),
                            Description = "Audio Devices category",
                            ImageUrl = "https://example.com/images/audio_devices.jpg",
                            Name = "Audio Devices",
                            ParentId = new Guid("7ad3d843-1642-4e8a-a843-503928ef8154"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("8980e70c-3345-4885-8518-cfcda95b3078"),
                            Description = "Household category",
                            IconName = "cleaning-spray",
                            ImageUrl = "https://example.com/images/household.jpg",
                            Name = "Household",
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("0e6feb3f-f795-4541-8cc6-7d7047951eb9"),
                            Description = "Kitchen Appliances category",
                            ImageUrl = "https://example.com/images/kitchen_appliances.jpg",
                            Name = "Kitchen Appliances",
                            ParentId = new Guid("8980e70c-3345-4885-8518-cfcda95b3078"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("1b6f5f96-233d-4b82-b30f-27643f6b62eb"),
                            Description = "Cleaning Supplies category",
                            ImageUrl = "https://example.com/images/cleaning_supplies.jpg",
                            Name = "Cleaning Supplies",
                            ParentId = new Guid("8980e70c-3345-4885-8518-cfcda95b3078"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d94af679-24f4-4ab2-ae1e-ba3689143579"),
                            Description = "Storage category",
                            ImageUrl = "https://example.com/images/storage.jpg",
                            Name = "Storage",
                            ParentId = new Guid("8980e70c-3345-4885-8518-cfcda95b3078"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("2f4f0438-f456-4770-9d49-1a46ed4ec88a"),
                            Description = "Bathroom category",
                            ImageUrl = "https://example.com/images/bathroom.jpg",
                            Name = "Bathroom",
                            ParentId = new Guid("8980e70c-3345-4885-8518-cfcda95b3078"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("0dfa0836-09c9-4a2d-b74a-9b2085976dcf"),
                            Description = "Furniture category",
                            IconName = "sofa",
                            ImageUrl = "https://example.com/images/furniture.jpg",
                            Name = "Furniture",
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("68ae1c83-85c1-4002-bb32-d00ac9b3a1bb"),
                            Description = "Living Room category",
                            ImageUrl = "https://example.com/images/living_room.jpg",
                            Name = "Living Room",
                            ParentId = new Guid("0dfa0836-09c9-4a2d-b74a-9b2085976dcf"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("c9f81657-73a1-4b53-bf80-b59121eae433"),
                            Description = "Bedroom category",
                            ImageUrl = "https://example.com/images/bedroom.jpg",
                            Name = "Bedroom",
                            ParentId = new Guid("0dfa0836-09c9-4a2d-b74a-9b2085976dcf"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("2f3ad03d-c8a3-4c12-bf7c-db764e634fc4"),
                            Description = "Office Furniture category",
                            ImageUrl = "https://example.com/images/office_furniture.jpg",
                            Name = "Office Furniture",
                            ParentId = new Guid("0dfa0836-09c9-4a2d-b74a-9b2085976dcf"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("7f3e369a-0b7d-4178-84bf-e4194fac9ed2"),
                            Description = "Outdoor category",
                            ImageUrl = "https://example.com/images/outdoor.jpg",
                            Name = "Outdoor",
                            ParentId = new Guid("0dfa0836-09c9-4a2d-b74a-9b2085976dcf"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("cc9bf323-2160-49b2-ae79-340781163eb2"),
                            Description = "Work tools category",
                            IconName = "hammer",
                            ImageUrl = "https://example.com/images/worktools.jpg",
                            Name = "Work tools",
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("834ba378-fe57-4702-b85c-4cb0431d1909"),
                            Description = "Hand Tools category",
                            ImageUrl = "https://example.com/images/hand_tools.jpg",
                            Name = "Hand Tools",
                            ParentId = new Guid("cc9bf323-2160-49b2-ae79-340781163eb2"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("1c9d0336-9ac8-440a-b6b6-3698940f608c"),
                            Description = "Power Tools category",
                            ImageUrl = "https://example.com/images/power_tools.jpg",
                            Name = "Power Tools",
                            ParentId = new Guid("cc9bf323-2160-49b2-ae79-340781163eb2"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("18710447-a260-44f2-9a4b-77c0b246bbc5"),
                            Description = "Safety Gear category",
                            ImageUrl = "https://example.com/images/safety_gear.jpg",
                            Name = "Safety Gear",
                            ParentId = new Guid("cc9bf323-2160-49b2-ae79-340781163eb2"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("158ebe6b-0e3d-48da-8893-5e3621dd2c4b"),
                            Description = "Tool Storage category",
                            ImageUrl = "https://example.com/images/tool_storage.jpg",
                            Name = "Tool Storage",
                            ParentId = new Guid("cc9bf323-2160-49b2-ae79-340781163eb2"),
                            PropertyKeys = "[]",
                            RowVersion = new byte[0],
                            Status = 0
                        });
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Collections.Collection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal?>("MaxPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("IsActive");

                    b.ToTable("Collections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000001"),
                            CategoryId = new Guid("d2deb989-35c5-4ca1-a748-12411d3ac3a4"),
                            ImageUrl = "https://example.com/collections/galaxy.jpg",
                            IsActive = true,
                            MaxPrice = 1300m,
                            MinPrice = 1000m,
                            RowVersion = new byte[0],
                            Title = "Galaxy Highlights"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000002"),
                            CategoryId = new Guid("c1cd879d-175e-4ff5-b354-054f9f82ce98"),
                            ImageUrl = "https://example.com/collections/sony.jpg",
                            IsActive = true,
                            MaxPrice = 400m,
                            MinPrice = 300m,
                            RowVersion = new byte[0],
                            Title = "Sony Audio Bestsellers"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000003"),
                            CategoryId = new Guid("7eb489f4-2f55-4510-8e49-3965370c4989"),
                            ImageUrl = "https://example.com/collections/denim.jpg",
                            IsActive = true,
                            MaxPrice = 100m,
                            MinPrice = 50m,
                            RowVersion = new byte[0],
                            Title = "Denim Essentials"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000004"),
                            CategoryId = new Guid("0dfa0836-09c9-4a2d-b74a-9b2085976dcf"),
                            ImageUrl = "https://example.com/collections/tables.jpg",
                            IsActive = true,
                            MaxPrice = 160m,
                            MinPrice = 120m,
                            RowVersion = new byte[0],
                            Title = "Modern Coffee Tables"
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000005"),
                            CategoryId = new Guid("cc9bf323-2160-49b2-ae79-340781163eb2"),
                            ImageUrl = "https://example.com/collections/makita.jpg",
                            IsActive = true,
                            MaxPrice = 250m,
                            MinPrice = 200m,
                            RowVersion = new byte[0],
                            Title = "Makita Power Tools"
                        });
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Common.Sequence", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("LastValue")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("Sequences");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Orders.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d39ee25-6be0-46aa-8a1f-75407bd3fa0d"),
                            OrderNumber = "ORD-1001",
                            RowVersion = new byte[0],
                            Status = 4,
                            TotalPrice = 139.98m,
                            UserId = new Guid("7a612c2e-ebc1-4a30-ac54-cccb566a1086")
                        },
                        new
                        {
                            Id = new Guid("2f2339d3-98a9-4039-b5fe-fa6d8e9d66ba"),
                            OrderNumber = "ORD-1002",
                            RowVersion = new byte[0],
                            Status = 4,
                            TotalPrice = 1489.96m,
                            UserId = new Guid("fa67eef0-62a7-4e61-83ef-5a054e84ce41")
                        },
                        new
                        {
                            Id = new Guid("4e6f98ed-d665-470b-992b-dd872c86abe2"),
                            OrderNumber = "ORD-1003",
                            RowVersion = new byte[0],
                            Status = 4,
                            TotalPrice = 689.97m,
                            UserId = new Guid("82bf572a-ab40-4571-b1a2-ec9dcf9ccb7d")
                        });
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Orders.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems", t =>
                        {
                            t.HasCheckConstraint("CK_OrderItem_Quantity_Positive", "[Quantity] > 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000b001"),
                            OrderId = new Guid("8d39ee25-6be0-46aa-8a1f-75407bd3fa0d"),
                            OrderedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 69.99m,
                            ProductId = new Guid("b416e570-f438-4c53-9dd1-1b8388dd181b"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000b002"),
                            OrderId = new Guid("2f2339d3-98a9-4039-b5fe-fa6d8e9d66ba"),
                            OrderedAt = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1199.99m,
                            ProductId = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000b003"),
                            OrderId = new Guid("2f2339d3-98a9-4039-b5fe-fa6d8e9d66ba"),
                            OrderedAt = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 149.99m,
                            ProductId = new Guid("74a46f1c-1054-408d-89dc-8ca00285660f"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-00000000b004"),
                            OrderId = new Guid("4e6f98ed-d665-470b-992b-dd872c86abe2"),
                            OrderedAt = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 229.99m,
                            ProductId = new Guid("4c73d114-2aa1-4f4c-aa7a-48038f1f95fc"),
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("DiscountPercent")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.PrimitiveCollection<string>("ImageUrls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Rating")
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3,2)");

                    b.Property<int>("ReviewsCount")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SoldCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a"),
                            CategoryId = new Guid("d2deb989-35c5-4ca1-a748-12411d3ac3a4"),
                            Code = "SAM-001",
                            ImageUrls = "[\"https://content.rozetka.com.ua/goods/images/big/398092199.jpg\",\"https://content1.rozetka.com.ua/goods/images/big/398092200.jpg\",\"https://content.rozetka.com.ua/goods/images/big/398092201.jpg\",\"https://content.rozetka.com.ua/goods/images/big/398092202.jpg\",\"https://content.rozetka.com.ua/goods/images/big/398092203.jpg\",\"https://content1.rozetka.com.ua/goods/images/big/398092204.jpg\",\"https://content2.rozetka.com.ua/goods/images/big/398092205.jpg\",\"https://content.rozetka.com.ua/goods/images/big/398092206.jpg\"]",
                            Name = "Samsung Galaxy S23 Ultra",
                            Price = 1199.99m,
                            Quantity = 50,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("a2c28a83-cfea-46ee-87e3-906f9e90f1aa"),
                            CategoryId = new Guid("c1cd879d-175e-4ff5-b354-054f9f82ce98"),
                            Code = "SONY-002",
                            ImageUrls = "[\"https://content2.rozetka.com.ua/goods/images/big/296707484.jpg\",\"https://content2.rozetka.com.ua/goods/images/big/296707485.jpg\"]",
                            Name = "Sony WH-1000XM5 Headphones",
                            Price = 349.99m,
                            Quantity = 50,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("ea96f23c-13b2-4b2c-b4a6-ec7d8c19aef5"),
                            CategoryId = new Guid("d2deb989-35c5-4ca1-a748-12411d3ac3a4"),
                            Code = "APP-002",
                            ImageUrls = "[\"https://content2.rozetka.com.ua/goods/images/big/524114081.jpg\",\"https://content1.rozetka.com.ua/goods/images/big/524114107.jpg\",\"https://content1.rozetka.com.ua/goods/images/big/524114117.jpg\",\"https://content2.rozetka.com.ua/goods/images/big/524114126.jpg\",\"https://content1.rozetka.com.ua/goods/images/big/524114144.jpg\"]",
                            Name = "Apple iPhone 15 Pro Max",
                            Price = 1399.99m,
                            Quantity = 40,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("12a5f27a-59d1-4961-86d7-14a787f8eec8"),
                            CategoryId = new Guid("c1cd879d-175e-4ff5-b354-054f9f82ce98"),
                            Code = "BOSE-001",
                            ImageUrls = "[\"https://content2.rozetka.com.ua/goods/images/big/382915623.jpg\",\"https://content1.rozetka.com.ua/goods/images/big/382915624.jpg\",\"https://content1.rozetka.com.ua/goods/images/big/382915625.jpg\",\"https://content.rozetka.com.ua/goods/images/big/382915629.jpg\"]",
                            Name = "Bose QuietComfort Ultra",
                            Price = 379.99m,
                            Quantity = 35,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("82d2d24a-1dc5-491b-926d-b4e72d168115"),
                            CategoryId = new Guid("22e7ee0d-8962-482b-857d-43ba828de1ff"),
                            Code = "ELE-003",
                            ImageUrls = "[\"https://content2.rozetka.com.ua/goods/images/big/423031985.jpg\",\"https://content2.rozetka.com.ua/goods/images/big/423031986.jpg\",\"https://content1.rozetka.com.ua/goods/images/big/423031987.jpg\",\"https://content2.rozetka.com.ua/goods/images/big/423031988.jpg\",\"https://content1.rozetka.com.ua/goods/images/big/423031989.jpg\"]",
                            Name = "Lenovo ThinkPad X1 Carbon Gen 11",
                            Price = 1899.99m,
                            Quantity = 25,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("7777aaaa-bbbb-cccc-dddd-eeee00000001"),
                            CategoryId = new Guid("8fc8707d-97d7-41a1-9c31-50f07b8466f4"),
                            Code = "ELE-005",
                            ImageUrls = "[\"https://cdn.tehnoezh.ua/0/0/0/2/0/2/0/5/2/000202052_1054_1054.jpeg\",\"https://cdn.tehnoezh.ua/0/0/0/2/0/2/0/5/3/000202053_1054_1054.jpeg\",\"https://cdn.tehnoezh.ua/0/0/0/2/0/2/0/5/4/000202054_1054_1054.jpeg\",\"https://cdn.tehnoezh.ua/0/0/0/2/0/2/0/5/5/000202055_1054_1054.jpeg\",\"https://cdn.tehnoezh.ua/0/0/0/2/0/2/0/5/6/000202056_1054_1054.jpeg\"]",
                            Name = "Sony Alpha a6400 Mirrorless Camera",
                            Price = 899.99m,
                            Quantity = 25,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("7777eeee-ffff-aaaa-bbbb-cccc00000001"),
                            CategoryId = new Guid("8fc8707d-97d7-41a1-9c31-50f07b8466f4"),
                            Code = "ELE-006",
                            ImageUrls = "[\"https://images.samsung.com/is/image/samsung/p6pim/ua/qe55s95dauxua/gallery/ua-oled-s95d-qe55s95dauxua-544778064?$684_547_JPG$\",\"https://images.samsung.com/is/image/samsung/p6pim/ua/qe55s95dauxua/gallery/ua-oled-s95d-qe55s95dauxua-541007467?$684_547_JPG$\",\"https://images.samsung.com/is/image/samsung/p6pim/ua/qe55s95dauxua/gallery/ua-oled-s95d-qe55s95dauxua-544308036?$684_547_JPG$\"]",
                            Name = "Samsung QLED 4K Smart TV 55\"",
                            Price = 1099.99m,
                            Quantity = 15,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("b416e570-f438-4c53-9dd1-1b8388dd181b"),
                            CategoryId = new Guid("7eb489f4-2f55-4510-8e49-3965370c4989"),
                            Code = "FAS-001",
                            ImageUrls = "[\"https://xcdn.next.co.uk/common/items/default/default/itemimages/3_4Ratio/product/lge/E66531s.jpg?im=Resize,width=750\",\"https://xcdn.next.co.uk/common/items/default/default/itemimages/3_4Ratio/product/lge/E66531s3.jpg?im=Resize,width=480\"]",
                            Name = "Men's Denim Jacket",
                            Price = 69.99m,
                            Quantity = 50,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("6f4c984f-7baf-4a39-aab3-018202f20de5"),
                            CategoryId = new Guid("69f22c76-7202-44e6-9132-09fd09c55632"),
                            Code = "FAS-002",
                            ImageUrls = "[\"https://static.zara.net/assets/public/5383/1e3a/567f4efa9ab2/540875121096/04772368808-p/04772368808-p.jpg?ts=1747906901087\\u0026w=750\",\"https://static.zara.net/assets/public/1739/0738/387f4ed59035/81ddaea8d349/04772368808-a2/04772368808-a2.jpg?ts=1747906905715\\u0026w=750\",\"https://static.zara.net/assets/public/6eda/d9b8/33b748b0941d/85074a50ec93/04772368808-a4/04772368808-a4.jpg?ts=1747906897381\\u0026w=563\"]",
                            Name = "Zara Floral Midi Dress",
                            Price = 89.99m,
                            Quantity = 70,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("c26e813d-2f01-4d0b-8d3c-209fbe35b7c2"),
                            CategoryId = new Guid("be4e31b6-3b78-4d99-a3fa-7cb8a7bc4a8b"),
                            Code = "FAS-003",
                            ImageUrls = "[\"https://img.modivo.cloud/product(5/4/5/9/54595f77bbbe0dda2ded1c7a961e279ff9bd34a7_0000207922853_01_jb_kopia.jpg,webp)/nike-vzuttia-air-max-270-ah6789-100-bilii.webp\",\"https://img.modivo.cloud/product(1/f/8/9/1f89d5521273cfa7afca6e03500f99cb54bb9501_0000207922853_03_jb_kopia.jpg,webp)/nike-vzuttia-air-max-270-ah6789-100-bilii.webp\",\"https://img.modivo.cloud/product(6/d/0/0/6d009576160e83813798096c877e9b7ee1b329a5_0000207922853_02_jb_kopia.jpg,webp)/nike-vzuttia-air-max-270-ah6789-100-bilii.webp\"]",
                            Name = "Nike Air Max 270 Women’s",
                            Price = 129.99m,
                            Quantity = 60,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("7777bbbb-cccc-dddd-eeee-ffff00000001"),
                            CategoryId = new Guid("69f22c76-7202-44e6-9132-09fd09c55632"),
                            Code = "FAS-005",
                            ImageUrls = "[\"https://img.kwcdn.com/product/open/17a385505e6240aaa133bfb681d557a5-goods.jpeg?imageView2/2/w/800/q/70/format/webp\",\"https://img.kwcdn.com/product/open/61685065fd0e459d9af558fcf949ee83-goods.jpeg?imageView2/2/w/800/q/70/format/webp\"]",
                            Name = "Stylish Women's Summer Hat",
                            Price = 34.99m,
                            Quantity = 40,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("7777ffff-aaaa-bbbb-cccc-dddd00000002"),
                            CategoryId = new Guid("7eb489f4-2f55-4510-8e49-3965370c4989"),
                            Code = "FAS-006",
                            ImageUrls = "[\"https://content2.rozetka.com.ua/goods/images/big/331352901.jpg\",\"https://content1.rozetka.com.ua/goods/images/big/331352912.jpg\",\"https://content1.rozetka.com.ua/goods/images/big/331352917.jpg\"]",
                            Name = "Men's Genuine Leather Jacket",
                            Price = 179.99m,
                            Quantity = 20,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("74a46f1c-1054-408d-89dc-8ca00285660f"),
                            CategoryId = new Guid("0dfa0836-09c9-4a2d-b74a-9b2085976dcf"),
                            Code = "FUR-001",
                            ImageUrls = "[\"https://cdn2.jysk.com/getimage/wd3.medium/256592\",\"https://cdn2.jysk.com/getimage/wd3.medium/254304\"]",
                            Name = "Modern Wooden Coffee Table",
                            Price = 149.99m,
                            Quantity = 50,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("b7a6497f-c4cb-4d7c-afe5-167c02cbf170"),
                            CategoryId = new Guid("68ae1c83-85c1-4002-bb32-d00ac9b3a1bb"),
                            Code = "FUR-002",
                            ImageUrls = "[\"https://home-club.com.ua//images/thumbs/0018524_-_510.jpeg\",\"https://home-club.com.ua//images/thumbs/0310065_-.jpeg\",\"https://home-club.com.ua//images/thumbs/0043920_-.jpeg\"]",
                            Name = "IKEA LACK Coffee Table",
                            Price = 39.99m,
                            Quantity = 80,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("2ad39762-dbd2-4959-bf36-03f30e3a3a1c"),
                            CategoryId = new Guid("c9f81657-73a1-4b53-bf80-b59121eae433"),
                            Code = "FUR-004",
                            ImageUrls = "[\"https://cdn1.jysk.com/getimage/wd3.medium/236364\",\"https://cdn1.jysk.com/getimage/wd3.medium/236369\",\"https://cdn1.jysk.com/getimage/wd3.medium/236365\"]",
                            Name = "Minimalist Bedside Table",
                            Price = 59.99m,
                            Quantity = 40,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000002"),
                            CategoryId = new Guid("2f3ad03d-c8a3-4c12-bf7c-db764e634fc4"),
                            Code = "FUR-003",
                            ImageUrls = "[\"https://kupistul.ua/public/upload/catalogGood/kreslo-flex-mesh-cherniy-cherniy-106850112-0995.jpg\",\"https://kupistul.ua/public/upload/catalogGoodPhoto/kreslo-flex-mesh-cherniy-cherniy-106850112-77445.jpg\",\"https://kupistul.ua/public/upload/catalogGoodPhoto/kreslo-flex-mesh-cherniy-cherniy-106850112-77446.jpg\"]",
                            Name = "Ergonomic Office Chair with Lumbar Support",
                            Price = 249.99m,
                            Quantity = 50,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("7777dddd-aaaa-bbbb-cccc-eeee00000003"),
                            CategoryId = new Guid("c9f81657-73a1-4b53-bf80-b59121eae433"),
                            Code = "FUR-006",
                            ImageUrls = "[\"https://cdn1.jysk.com/getimage/wd3.large/245914\",\"https://cdn1.jysk.com/getimage/wd3.large/245910\",\"https://cdn1.jysk.com/getimage/wd3.large/161839\",\"https://cdn1.jysk.com/getimage/wd3.large/161840\"]",
                            Name = "Solid Wood Bookshelf 5-Tier",
                            Price = 129.99m,
                            Quantity = 30,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("a055168e-3130-4b0a-8495-60e25d62e057"),
                            CategoryId = new Guid("8980e70c-3345-4885-8518-cfcda95b3078"),
                            Code = "HOU-001",
                            ImageUrls = "[\"https://content1.rozetka.com.ua/goods/images/big/396437112.jpg\",\"https://content.rozetka.com.ua/goods/images/big/396437105.jpg\",\"https://content2.rozetka.com.ua/goods/images/big/396437106.jpg\"]",
                            Name = "Dyson V15 Detect Vacuum Cleaner",
                            Price = 699.0m,
                            Quantity = 50,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("25c4ff90-79e6-4d88-bda6-cce18f8cb5a0"),
                            CategoryId = new Guid("2f4f0438-f456-4770-9d49-1a46ed4ec88a"),
                            Code = "HOU-002",
                            ImageUrls = "[\"https://m.media-amazon.com/images/I/31lXMBFhMpL._SX522_.jpg\"]",
                            Name = "Silicone Toilet Brush & Holder",
                            Price = 19.99m,
                            Quantity = 100,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000003"),
                            CategoryId = new Guid("0e6feb3f-f795-4541-8cc6-7d7047951eb9"),
                            Code = "HOU-003",
                            ImageUrls = "[\"https://content2.rozetka.com.ua/goods/images/big/378171578.jpg\",\"https://content2.rozetka.com.ua/goods/images/big/378171579.jpg\",\"https://content1.rozetka.com.ua/goods/images/big/378171580.jpg\"]",
                            Name = "Collapsible Laundry Basket",
                            Price = 19.99m,
                            Quantity = 100,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("7777eeee-aaaa-bbbb-cccc-dddd00000006"),
                            CategoryId = new Guid("8980e70c-3345-4885-8518-cfcda95b3078"),
                            Code = "HOU-006",
                            ImageUrls = "[\"https://content.rozetka.com.ua/goods/images/big/529433930.jpg\",\"https://content1.rozetka.com.ua/goods/images/big/469768391.jpg\"]",
                            Name = "Philips Series 3000i Air Purifier",
                            Price = 319.00m,
                            Quantity = 35,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("7777eeee-aaaa-bbbb-cccc-dddd00000004"),
                            CategoryId = new Guid("8980e70c-3345-4885-8518-cfcda95b3078"),
                            Code = "HOU-007",
                            ImageUrls = "[\"https://ecosoft.ua/upload/resize_cache/iblock/d40/564_564_140cd750bba9870f18aada2478b24840a/ru_filtr_obratnogo_osmosa_ecosoft_standard_pro_mo550mecostd_ua_filtr_zvorotnogo_osmosu_ecosoft_stand.webp\",\"https://ecosoft.ua/upload/resize_cache/iblock/527/564_564_140cd750bba9870f18aada2478b24840a/mo550ecostd_1_opt.webp\",\"https://ecosoft.ua/upload/resize_cache/iblock/391/564_564_140cd750bba9870f18aada2478b24840a/mo550ecostd_4_opt.webp\"]",
                            Name = "AquaPro RO+UV+UF Water Purifier",
                            Price = 199.99m,
                            Quantity = 45,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("3c7b48ff-2b17-456e-b6d9-1e4701c56ab2"),
                            CategoryId = new Guid("1c9d0336-9ac8-440a-b6b6-3698940f608c"),
                            Code = "WTL-002",
                            ImageUrls = "[\"https://content2.rozetka.com.ua/goods/images/big/11956995.jpg\"]",
                            Name = "DeWalt DCD996 Cordless Drill",
                            Price = 199.99m,
                            Quantity = 60,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("4c73d114-2aa1-4f4c-aa7a-48038f1f95fc"),
                            CategoryId = new Guid("cc9bf323-2160-49b2-ae79-340781163eb2"),
                            Code = "WTL-001",
                            ImageUrls = "[\"https://content2.rozetka.com.ua/goods/images/big/333625233.jpg\",\"https://content2.rozetka.com.ua/goods/images/big/367185899.jpg\"]",
                            Name = "Makita Cordless Hammer Drill",
                            Price = 229.99m,
                            Quantity = 50,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("48f6ef8b-b2b2-4e33-b3f1-df7c06b60f95"),
                            CategoryId = new Guid("18710447-a260-44f2-9a4b-77c0b246bbc5"),
                            Code = "WTL-003",
                            ImageUrls = "[\"https://specprom-kr.com.ua/image/cache/catalog/image/catalog/files/perchatki-mbs-pokrytye-nitrilom-tverdyj-manzhet-564x564.webp\"]",
                            Name = "Heavy-Duty Utility Gloves",
                            Price = 24.99m,
                            Quantity = 80,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000005"),
                            CategoryId = new Guid("18710447-a260-44f2-9a4b-77c0b246bbc5"),
                            Code = "TOOL-005",
                            ImageUrls = "[\"https://biko.ua/image/cache/catalog/product/19139/195700-500x500.jpg\",\"https://biko.ua/image/cache/catalog/product/19139/5bbab5-500x500.jpg\"]",
                            Name = "3M Safety Helmet H-700 Series",
                            Price = 35.99m,
                            Quantity = 150,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        },
                        new
                        {
                            Id = new Guid("7777ffff-aaaa-bbbb-cccc-dddd00000005"),
                            CategoryId = new Guid("834ba378-fe57-4702-b85c-4cb0431d1909"),
                            Code = "TOOL-010",
                            ImageUrls = "[\"https://content1.rozetka.com.ua/goods/images/big/318774509.jpg\",\"https://content.rozetka.com.ua/goods/images/big/318774562.png\",\"https://content2.rozetka.com.ua/goods/images/big/318774588.jpg\"]",
                            Name = "Bosch GSB 180-LI Cordless Drill",
                            Price = 139.99m,
                            Quantity = 60,
                            Rating = 0m,
                            ReviewsCount = 0,
                            RowVersion = new byte[0],
                            SoldCount = 0
                        });
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Products.ProductAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttributes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("31ed2059-8d7c-440e-849c-92b82fa07535"),
                            Key = "Display",
                            ProductId = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a"),
                            Value = "6.8-inch AMOLED"
                        },
                        new
                        {
                            Id = new Guid("5d1af968-e023-4bf1-a58b-4d6701785946"),
                            Key = "Battery",
                            ProductId = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a"),
                            Value = "5000mAh"
                        },
                        new
                        {
                            Id = new Guid("2d3c46bc-1bd0-45c0-a695-6b3ea0cea55d"),
                            Key = "Camera",
                            ProductId = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a"),
                            Value = "200MP"
                        },
                        new
                        {
                            Id = new Guid("45890b2d-4656-4bf5-bea8-8d68cef13afa"),
                            Key = "Storage",
                            ProductId = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a"),
                            Value = "256GB"
                        },
                        new
                        {
                            Id = new Guid("eb86dc2a-68a2-4f38-a498-4d21a2dfd366"),
                            Key = "Type",
                            ProductId = new Guid("a2c28a83-cfea-46ee-87e3-906f9e90f1aa"),
                            Value = "Over-ear"
                        },
                        new
                        {
                            Id = new Guid("bdb82599-d1ed-4257-8429-0c5bf8ba3094"),
                            Key = "Noise Cancellation",
                            ProductId = new Guid("a2c28a83-cfea-46ee-87e3-906f9e90f1aa"),
                            Value = "Yes"
                        },
                        new
                        {
                            Id = new Guid("8f9b1a9b-6472-4251-b3b9-0dc488ac3ca3"),
                            Key = "Battery Life",
                            ProductId = new Guid("a2c28a83-cfea-46ee-87e3-906f9e90f1aa"),
                            Value = "30 hours"
                        },
                        new
                        {
                            Id = new Guid("1940fec2-48f2-40ab-a4a0-199adcce9e52"),
                            Key = "Connectivity",
                            ProductId = new Guid("a2c28a83-cfea-46ee-87e3-906f9e90f1aa"),
                            Value = "Bluetooth 5.2"
                        },
                        new
                        {
                            Id = new Guid("b5bdf51b-e460-4e8a-8c44-22625f91ae45"),
                            Key = "Display",
                            ProductId = new Guid("ea96f23c-13b2-4b2c-b4a6-ec7d8c19aef5"),
                            Value = "6.7-inch OLED"
                        },
                        new
                        {
                            Id = new Guid("3b15cf2c-d0a6-45bb-a99f-2f0fa66cf91c"),
                            Key = "Chip",
                            ProductId = new Guid("ea96f23c-13b2-4b2c-b4a6-ec7d8c19aef5"),
                            Value = "A17 Pro"
                        },
                        new
                        {
                            Id = new Guid("a49880a3-4ba6-4bb0-8015-4bc83b6dbbcd"),
                            Key = "Camera",
                            ProductId = new Guid("ea96f23c-13b2-4b2c-b4a6-ec7d8c19aef5"),
                            Value = "48MP Triple-lens"
                        },
                        new
                        {
                            Id = new Guid("83cfd9cb-24a9-4056-bb90-85986b3b6310"),
                            Key = "Storage",
                            ProductId = new Guid("ea96f23c-13b2-4b2c-b4a6-ec7d8c19aef5"),
                            Value = "256GB"
                        },
                        new
                        {
                            Id = new Guid("aa64df41-c001-4d1a-91b7-0807f2b5c0de"),
                            Key = "Type",
                            ProductId = new Guid("12a5f27a-59d1-4961-86d7-14a787f8eec8"),
                            Value = "Over-ear"
                        },
                        new
                        {
                            Id = new Guid("44c10d0d-414c-4a75-baff-b5246a6e688b"),
                            Key = "Noise Cancellation",
                            ProductId = new Guid("12a5f27a-59d1-4961-86d7-14a787f8eec8"),
                            Value = "Adaptive"
                        },
                        new
                        {
                            Id = new Guid("6fa61d21-700f-4c0e-a04f-c1a1a8a2745b"),
                            Key = "Battery Life",
                            ProductId = new Guid("12a5f27a-59d1-4961-86d7-14a787f8eec8"),
                            Value = "24 hours"
                        },
                        new
                        {
                            Id = new Guid("75c1376d-1ae0-405f-a46d-15c805e3e212"),
                            Key = "Charging",
                            ProductId = new Guid("12a5f27a-59d1-4961-86d7-14a787f8eec8"),
                            Value = "USB-C Fast Charging"
                        },
                        new
                        {
                            Id = new Guid("adcccfb2-5f3b-44d2-b3bc-0091e084d27f"),
                            Key = "Display",
                            ProductId = new Guid("82d2d24a-1dc5-491b-926d-b4e72d168115"),
                            Value = "14\" FHD+ IPS"
                        },
                        new
                        {
                            Id = new Guid("50983ef4-7586-4be1-a6c7-eac4c7fd90a7"),
                            Key = "CPU",
                            ProductId = new Guid("82d2d24a-1dc5-491b-926d-b4e72d168115"),
                            Value = "Intel Core i7-1355U"
                        },
                        new
                        {
                            Id = new Guid("b390fa02-66b0-4d7b-8f2c-046cd0c93187"),
                            Key = "RAM",
                            ProductId = new Guid("82d2d24a-1dc5-491b-926d-b4e72d168115"),
                            Value = "16GB LPDDR5"
                        },
                        new
                        {
                            Id = new Guid("be3a6d15-cb6b-490a-87f1-6a54bd1614ec"),
                            Key = "Storage",
                            ProductId = new Guid("82d2d24a-1dc5-491b-926d-b4e72d168115"),
                            Value = "512GB SSD"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000101"),
                            Key = "Resolution",
                            ProductId = new Guid("7777aaaa-bbbb-cccc-dddd-eeee00000001"),
                            Value = "24.2MP"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000102"),
                            Key = "Sensor",
                            ProductId = new Guid("7777aaaa-bbbb-cccc-dddd-eeee00000001"),
                            Value = "APS-C CMOS"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000103"),
                            Key = "Video",
                            ProductId = new Guid("7777aaaa-bbbb-cccc-dddd-eeee00000001"),
                            Value = "4K UHD"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000104"),
                            Key = "Lens Mount",
                            ProductId = new Guid("7777aaaa-bbbb-cccc-dddd-eeee00000001"),
                            Value = "Sony E-mount"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000151"),
                            Key = "Screen Size",
                            ProductId = new Guid("7777eeee-ffff-aaaa-bbbb-cccc00000001"),
                            Value = "55 inch"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000152"),
                            Key = "Resolution",
                            ProductId = new Guid("7777eeee-ffff-aaaa-bbbb-cccc00000001"),
                            Value = "4K Ultra HD"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000153"),
                            Key = "Display Type",
                            ProductId = new Guid("7777eeee-ffff-aaaa-bbbb-cccc00000001"),
                            Value = "QLED"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000154"),
                            Key = "Smart TV",
                            ProductId = new Guid("7777eeee-ffff-aaaa-bbbb-cccc00000001"),
                            Value = "Yes"
                        },
                        new
                        {
                            Id = new Guid("f75be0e7-0d41-45e8-87d7-e53060c87cd4"),
                            Key = "Material",
                            ProductId = new Guid("b416e570-f438-4c53-9dd1-1b8388dd181b"),
                            Value = "100% Cotton"
                        },
                        new
                        {
                            Id = new Guid("34b80662-4ddf-44df-aeab-0a131d4ca441"),
                            Key = "Fit",
                            ProductId = new Guid("b416e570-f438-4c53-9dd1-1b8388dd181b"),
                            Value = "Regular"
                        },
                        new
                        {
                            Id = new Guid("93731c22-16a2-4c9e-b4d8-3aa7485d5acb"),
                            Key = "Color",
                            ProductId = new Guid("b416e570-f438-4c53-9dd1-1b8388dd181b"),
                            Value = "Blue"
                        },
                        new
                        {
                            Id = new Guid("ac51bf93-88a8-4b39-b106-b8a7f5c4db92"),
                            Key = "Season",
                            ProductId = new Guid("b416e570-f438-4c53-9dd1-1b8388dd181b"),
                            Value = "All seasons"
                        },
                        new
                        {
                            Id = new Guid("c1f7efb2-8dbb-4d6e-890b-91873cc0f8a2"),
                            Key = "Material",
                            ProductId = new Guid("6f4c984f-7baf-4a39-aab3-018202f20de5"),
                            Value = "Viscose"
                        },
                        new
                        {
                            Id = new Guid("184d5fd1-4e1d-42c2-9b58-d5d3c1b2235a"),
                            Key = "Fit",
                            ProductId = new Guid("6f4c984f-7baf-4a39-aab3-018202f20de5"),
                            Value = "Relaxed"
                        },
                        new
                        {
                            Id = new Guid("3a57dbde-0659-4377-a618-5477c3f1c6ae"),
                            Key = "Length",
                            ProductId = new Guid("6f4c984f-7baf-4a39-aab3-018202f20de5"),
                            Value = "Midi"
                        },
                        new
                        {
                            Id = new Guid("3d768f6d-11d5-4033-8b6e-c2674d37b44a"),
                            Key = "Pattern",
                            ProductId = new Guid("6f4c984f-7baf-4a39-aab3-018202f20de5"),
                            Value = "Floral"
                        },
                        new
                        {
                            Id = new Guid("ca0c370e-e27d-4ec6-89b2-1ed26b3db5c3"),
                            Key = "Size",
                            ProductId = new Guid("c26e813d-2f01-4d0b-8d3c-209fbe35b7c2"),
                            Value = "US 6–10"
                        },
                        new
                        {
                            Id = new Guid("1cf8cf59-8f36-4f7c-b332-97c68a4692c0"),
                            Key = "Color",
                            ProductId = new Guid("c26e813d-2f01-4d0b-8d3c-209fbe35b7c2"),
                            Value = "White/Pink"
                        },
                        new
                        {
                            Id = new Guid("7b7ec203-7f23-47ae-80d1-20b7f936a160"),
                            Key = "Upper",
                            ProductId = new Guid("c26e813d-2f01-4d0b-8d3c-209fbe35b7c2"),
                            Value = "Mesh + Synthetic"
                        },
                        new
                        {
                            Id = new Guid("c2d1f858-b56c-487f-9a71-c04d6cba91e3"),
                            Key = "Outsole",
                            ProductId = new Guid("c26e813d-2f01-4d0b-8d3c-209fbe35b7c2"),
                            Value = "Rubber"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000331"),
                            Key = "Material",
                            ProductId = new Guid("7777bbbb-cccc-dddd-eeee-ffff00000001"),
                            Value = "Straw"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000332"),
                            Key = "Color",
                            ProductId = new Guid("7777bbbb-cccc-dddd-eeee-ffff00000001"),
                            Value = "Beige"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000333"),
                            Key = "Size",
                            ProductId = new Guid("7777bbbb-cccc-dddd-eeee-ffff00000001"),
                            Value = "One Size Fits Most"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000161"),
                            Key = "Material",
                            ProductId = new Guid("7777ffff-aaaa-bbbb-cccc-dddd00000002"),
                            Value = "Genuine Leather"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000162"),
                            Key = "Color",
                            ProductId = new Guid("7777ffff-aaaa-bbbb-cccc-dddd00000002"),
                            Value = "Black"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000163"),
                            Key = "Size",
                            ProductId = new Guid("7777ffff-aaaa-bbbb-cccc-dddd00000002"),
                            Value = "M-XXL"
                        },
                        new
                        {
                            Id = new Guid("a6a26067-18e9-4543-8828-8069f09a411f"),
                            Key = "Material",
                            ProductId = new Guid("74a46f1c-1054-408d-89dc-8ca00285660f"),
                            Value = "Oak wood"
                        },
                        new
                        {
                            Id = new Guid("50c7325d-5a50-4494-8356-c4ae304e70f5"),
                            Key = "Dimensions",
                            ProductId = new Guid("74a46f1c-1054-408d-89dc-8ca00285660f"),
                            Value = "120x60x45 cm"
                        },
                        new
                        {
                            Id = new Guid("163febea-12c5-4ba7-af3e-5b3d5fa01e4f"),
                            Key = "Weight",
                            ProductId = new Guid("74a46f1c-1054-408d-89dc-8ca00285660f"),
                            Value = "18kg"
                        },
                        new
                        {
                            Id = new Guid("4946c132-8ec4-41ce-891d-4788067a4a66"),
                            Key = "Finish",
                            ProductId = new Guid("74a46f1c-1054-408d-89dc-8ca00285660f"),
                            Value = "Natural varnish"
                        },
                        new
                        {
                            Id = new Guid("c8d6d4e7-3c25-41f4-9c3c-144143d3cb94"),
                            Key = "Material",
                            ProductId = new Guid("b7a6497f-c4cb-4d7c-afe5-167c02cbf170"),
                            Value = "Particleboard"
                        },
                        new
                        {
                            Id = new Guid("ec9f4ff8-dc66-4a6a-a88d-dfd03275e05a"),
                            Key = "Dimensions",
                            ProductId = new Guid("b7a6497f-c4cb-4d7c-afe5-167c02cbf170"),
                            Value = "90x55 cm"
                        },
                        new
                        {
                            Id = new Guid("e0701d10-c221-4032-b3a5-4a05c69f56c5"),
                            Key = "Weight",
                            ProductId = new Guid("b7a6497f-c4cb-4d7c-afe5-167c02cbf170"),
                            Value = "5.8kg"
                        },
                        new
                        {
                            Id = new Guid("7aa17ee1-6b46-4d41-8ae2-4f2f2931e0aa"),
                            Key = "Finish",
                            ProductId = new Guid("b7a6497f-c4cb-4d7c-afe5-167c02cbf170"),
                            Value = "White"
                        },
                        new
                        {
                            Id = new Guid("bd929b9e-d115-41ea-8d6f-5f8c66200ac6"),
                            Key = "Material",
                            ProductId = new Guid("2ad39762-dbd2-4959-bf36-03f30e3a3a1c"),
                            Value = "Engineered wood"
                        },
                        new
                        {
                            Id = new Guid("fa9b7096-d331-4ed7-a45c-80e0b5d68242"),
                            Key = "Dimensions",
                            ProductId = new Guid("2ad39762-dbd2-4959-bf36-03f30e3a3a1c"),
                            Value = "45x40x50 cm"
                        },
                        new
                        {
                            Id = new Guid("2edab99b-17f7-4b63-93c2-8b42066a7d99"),
                            Key = "Color",
                            ProductId = new Guid("2ad39762-dbd2-4959-bf36-03f30e3a3a1c"),
                            Value = "Oak"
                        },
                        new
                        {
                            Id = new Guid("39ecdb88-44b6-4995-8cb8-e48de889d243"),
                            Key = "Drawers",
                            ProductId = new Guid("2ad39762-dbd2-4959-bf36-03f30e3a3a1c"),
                            Value = "1 soft-close drawer"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000321"),
                            Key = "Material",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000002"),
                            Value = "Mesh + Foam"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000322"),
                            Key = "Color",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000002"),
                            Value = "Black"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000323"),
                            Key = "Adjustable Height",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000002"),
                            Value = "Yes"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000324"),
                            Key = "Max Weight",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000002"),
                            Value = "120 kg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000181"),
                            Key = "Material",
                            ProductId = new Guid("7777dddd-aaaa-bbbb-cccc-eeee00000003"),
                            Value = "Pine Wood"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000182"),
                            Key = "Color",
                            ProductId = new Guid("7777dddd-aaaa-bbbb-cccc-eeee00000003"),
                            Value = "Walnut Brown"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000183"),
                            Key = "Shelves",
                            ProductId = new Guid("7777dddd-aaaa-bbbb-cccc-eeee00000003"),
                            Value = "5"
                        },
                        new
                        {
                            Id = new Guid("5a29ac69-487d-4609-b29e-3b6f30b088ce"),
                            Key = "Type",
                            ProductId = new Guid("a055168e-3130-4b0a-8495-60e25d62e057"),
                            Value = "Cordless"
                        },
                        new
                        {
                            Id = new Guid("7ba0bf0e-ed40-4e27-a0ac-85dd45279867"),
                            Key = "Battery Life",
                            ProductId = new Guid("a055168e-3130-4b0a-8495-60e25d62e057"),
                            Value = "60 minutes"
                        },
                        new
                        {
                            Id = new Guid("7c252a25-5c76-4e8b-be65-22e8651667ed"),
                            Key = "Dustbin Capacity",
                            ProductId = new Guid("a055168e-3130-4b0a-8495-60e25d62e057"),
                            Value = "0.76L"
                        },
                        new
                        {
                            Id = new Guid("b559db54-4289-499f-88dc-35a4c9978e4c"),
                            Key = "Power",
                            ProductId = new Guid("a055168e-3130-4b0a-8495-60e25d62e057"),
                            Value = "230AW"
                        },
                        new
                        {
                            Id = new Guid("949da2bb-18d8-4b1c-8e8d-2f10f011d5f7"),
                            Key = "Material",
                            ProductId = new Guid("25c4ff90-79e6-4d88-bda6-cce18f8cb5a0"),
                            Value = "Silicone + Plastic"
                        },
                        new
                        {
                            Id = new Guid("87a5f690-bcb1-4c00-a649-cb40f907e6f3"),
                            Key = "Color",
                            ProductId = new Guid("25c4ff90-79e6-4d88-bda6-cce18f8cb5a0"),
                            Value = "White/Grey"
                        },
                        new
                        {
                            Id = new Guid("27449383-41e3-45f2-84d4-df3d02ec949b"),
                            Key = "Type",
                            ProductId = new Guid("25c4ff90-79e6-4d88-bda6-cce18f8cb5a0"),
                            Value = "Wall-mounted"
                        },
                        new
                        {
                            Id = new Guid("d22b2c79-63f2-4c5f-888c-12d569df4455"),
                            Key = "Replaceable Head",
                            ProductId = new Guid("25c4ff90-79e6-4d88-bda6-cce18f8cb5a0"),
                            Value = "Yes"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000311"),
                            Key = "Material",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000003"),
                            Value = "Polyester"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000312"),
                            Key = "Capacity",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000003"),
                            Value = "60L"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000313"),
                            Key = "Foldable",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000003"),
                            Value = "Yes"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000314"),
                            Key = "Weight",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000003"),
                            Value = "0.5kg"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000481"),
                            Key = "Coverage Area",
                            ProductId = new Guid("7777eeee-aaaa-bbbb-cccc-dddd00000006"),
                            Value = "104 m²"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000482"),
                            Key = "CADR",
                            ProductId = new Guid("7777eeee-aaaa-bbbb-cccc-dddd00000006"),
                            Value = "400 m³/h"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000483"),
                            Key = "Filter Type",
                            ProductId = new Guid("7777eeee-aaaa-bbbb-cccc-dddd00000006"),
                            Value = "HEPA + Carbon"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000191"),
                            Key = "Technology",
                            ProductId = new Guid("7777eeee-aaaa-bbbb-cccc-dddd00000004"),
                            Value = "RO+UV+UF"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000192"),
                            Key = "Storage Capacity",
                            ProductId = new Guid("7777eeee-aaaa-bbbb-cccc-dddd00000004"),
                            Value = "8 Liters"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000193"),
                            Key = "Power",
                            ProductId = new Guid("7777eeee-aaaa-bbbb-cccc-dddd00000004"),
                            Value = "36W"
                        },
                        new
                        {
                            Id = new Guid("f31206e4-8237-4db1-b3a0-544b26dd5865"),
                            Key = "Voltage",
                            ProductId = new Guid("3c7b48ff-2b17-456e-b6d9-1e4701c56ab2"),
                            Value = "20V"
                        },
                        new
                        {
                            Id = new Guid("b8bc8f7a-267f-43a8-b81e-360d250209c3"),
                            Key = "Speed",
                            ProductId = new Guid("3c7b48ff-2b17-456e-b6d9-1e4701c56ab2"),
                            Value = "0–2000 RPM"
                        },
                        new
                        {
                            Id = new Guid("f5035e59-f0f6-4db6-8160-0df17931a1c8"),
                            Key = "Battery",
                            ProductId = new Guid("3c7b48ff-2b17-456e-b6d9-1e4701c56ab2"),
                            Value = "2x 5.0Ah Li-ion"
                        },
                        new
                        {
                            Id = new Guid("6c6b5864-33a0-4ec0-9a7e-34d73d226289"),
                            Key = "Chuck Size",
                            ProductId = new Guid("3c7b48ff-2b17-456e-b6d9-1e4701c56ab2"),
                            Value = "13mm"
                        },
                        new
                        {
                            Id = new Guid("e0e1e5c9-55d8-4d16-bca2-e45a0d3553cc"),
                            Key = "Voltage",
                            ProductId = new Guid("4c73d114-2aa1-4f4c-aa7a-48038f1f95fc"),
                            Value = "18V"
                        },
                        new
                        {
                            Id = new Guid("90bba9ca-cc95-405e-8a8e-da471eafcde2"),
                            Key = "Chuck Size",
                            ProductId = new Guid("4c73d114-2aa1-4f4c-aa7a-48038f1f95fc"),
                            Value = "13mm"
                        },
                        new
                        {
                            Id = new Guid("f46c7e06-8dfe-48e9-b47e-9953e159ae69"),
                            Key = "Speed",
                            ProductId = new Guid("4c73d114-2aa1-4f4c-aa7a-48038f1f95fc"),
                            Value = "0-2000 RPM"
                        },
                        new
                        {
                            Id = new Guid("07d62dcb-0736-4687-b066-92c3cde5fa9d"),
                            Key = "Battery",
                            ProductId = new Guid("4c73d114-2aa1-4f4c-aa7a-48038f1f95fc"),
                            Value = "2 x 5.0Ah Li-ion"
                        },
                        new
                        {
                            Id = new Guid("8b4a31cf-9690-4cbe-a30a-5c6365ab263f"),
                            Key = "Material",
                            ProductId = new Guid("48f6ef8b-b2b2-4e33-b3f1-df7c06b60f95"),
                            Value = "Synthetic leather + Spandex"
                        },
                        new
                        {
                            Id = new Guid("2f4073fd-5296-4d79-90dc-2532c6795bc5"),
                            Key = "Size",
                            ProductId = new Guid("48f6ef8b-b2b2-4e33-b3f1-df7c06b60f95"),
                            Value = "M, L, XL"
                        },
                        new
                        {
                            Id = new Guid("c95c1143-dcb0-4010-80a0-4b260303f170"),
                            Key = "Color",
                            ProductId = new Guid("48f6ef8b-b2b2-4e33-b3f1-df7c06b60f95"),
                            Value = "Black/Yellow"
                        },
                        new
                        {
                            Id = new Guid("14f8a2fd-5c20-439c-b65e-bd697c9ed75a"),
                            Key = "Closure",
                            ProductId = new Guid("48f6ef8b-b2b2-4e33-b3f1-df7c06b60f95"),
                            Value = "Velcro strap"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000141"),
                            Key = "Material",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000005"),
                            Value = "High-Density Polyethylene"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000142"),
                            Key = "Suspension",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000005"),
                            Value = "4-point ratchet"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000143"),
                            Key = "Ventilation",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000005"),
                            Value = "Yes"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000144"),
                            Key = "Standard",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000005"),
                            Value = "ANSI/ISEA Z89.1-2014"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000261"),
                            Key = "Type",
                            ProductId = new Guid("7777ffff-aaaa-bbbb-cccc-dddd00000005"),
                            Value = "Cordless Drill"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000262"),
                            Key = "Battery",
                            ProductId = new Guid("7777ffff-aaaa-bbbb-cccc-dddd00000005"),
                            Value = "18V Li-ion"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000263"),
                            Key = "Max Torque",
                            ProductId = new Guid("7777ffff-aaaa-bbbb-cccc-dddd00000005"),
                            Value = "54 Nm"
                        });
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Products.ProductFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductFeatures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c6676eab-a776-4380-9b0e-a07b10da8236"),
                            Description = "Snapdragon 8 Gen 2",
                            Name = "Performance",
                            ProductId = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a")
                        },
                        new
                        {
                            Id = new Guid("9f7ba4ac-9b83-41bc-9fc9-53896c0fcd17"),
                            Description = "Pro-grade camera system",
                            Name = "Camera Quality",
                            ProductId = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a")
                        },
                        new
                        {
                            Id = new Guid("1e8754f1-993e-4586-b0df-d16475bcd262"),
                            Description = "All-day usage",
                            Name = "Battery Life",
                            ProductId = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a")
                        },
                        new
                        {
                            Id = new Guid("015d3ed7-c231-405e-bbd2-ef99c8171603"),
                            Description = "Premium glass and metal",
                            Name = "Build",
                            ProductId = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a")
                        },
                        new
                        {
                            Id = new Guid("7833296c-251c-4868-9bc2-3da59b3cd811"),
                            Description = "High-resolution audio",
                            Name = "Sound",
                            ProductId = new Guid("a2c28a83-cfea-46ee-87e3-906f9e90f1aa")
                        },
                        new
                        {
                            Id = new Guid("b6634cd8-0a8c-4ada-b8cc-310b490c6058"),
                            Description = "Soft ear cushions",
                            Name = "Comfort",
                            ProductId = new Guid("a2c28a83-cfea-46ee-87e3-906f9e90f1aa")
                        },
                        new
                        {
                            Id = new Guid("542a9d5b-af5f-4709-82b1-ed83b2d9143d"),
                            Description = "Touch-enabled",
                            Name = "Controls",
                            ProductId = new Guid("a2c28a83-cfea-46ee-87e3-906f9e90f1aa")
                        },
                        new
                        {
                            Id = new Guid("edb89e51-144c-48a7-8fbf-7a645abc970b"),
                            Description = "Foldable design",
                            Name = "Portability",
                            ProductId = new Guid("a2c28a83-cfea-46ee-87e3-906f9e90f1aa")
                        },
                        new
                        {
                            Id = new Guid("56e75d3f-9fb5-4d8c-a986-8985a8aa96c1"),
                            Description = "Titanium frame",
                            Name = "Build Quality",
                            ProductId = new Guid("ea96f23c-13b2-4b2c-b4a6-ec7d8c19aef5")
                        },
                        new
                        {
                            Id = new Guid("76bdc733-91d3-48f1-a447-b78e0e4b9991"),
                            Description = "Smooth iOS experience",
                            Name = "Performance",
                            ProductId = new Guid("ea96f23c-13b2-4b2c-b4a6-ec7d8c19aef5")
                        },
                        new
                        {
                            Id = new Guid("06695e1f-8d42-498c-8d34-e3281d49753b"),
                            Description = "Cinematic mode & Night photography",
                            Name = "Camera System",
                            ProductId = new Guid("ea96f23c-13b2-4b2c-b4a6-ec7d8c19aef5")
                        },
                        new
                        {
                            Id = new Guid("e4c01f56-8e2e-4866-a98f-6c4f69f63f6f"),
                            Description = "Up to 29 hours video playback",
                            Name = "Battery Life",
                            ProductId = new Guid("ea96f23c-13b2-4b2c-b4a6-ec7d8c19aef5")
                        },
                        new
                        {
                            Id = new Guid("f00725dc-2d23-4ff3-93b6-bcb9fdf8f293"),
                            Description = "CustomTune technology",
                            Name = "Sound Quality",
                            ProductId = new Guid("12a5f27a-59d1-4961-86d7-14a787f8eec8")
                        },
                        new
                        {
                            Id = new Guid("2e5c6e3a-bb5f-42f7-b933-0e21dcdb267f"),
                            Description = "Plush cushioning",
                            Name = "Comfort",
                            ProductId = new Guid("12a5f27a-59d1-4961-86d7-14a787f8eec8")
                        },
                        new
                        {
                            Id = new Guid("93c3210e-48e6-4fc4-8783-47bdc8601694"),
                            Description = "Touch & voice control",
                            Name = "Controls",
                            ProductId = new Guid("12a5f27a-59d1-4961-86d7-14a787f8eec8")
                        },
                        new
                        {
                            Id = new Guid("da2c2ff2-1c38-4a23-a8cc-25b4f4ec2680"),
                            Description = "Modern aesthetic",
                            Name = "Design",
                            ProductId = new Guid("12a5f27a-59d1-4961-86d7-14a787f8eec8")
                        },
                        new
                        {
                            Id = new Guid("aeef3fa9-5e61-4bb8-8bff-2b5884c32596"),
                            Description = "Ultra-light carbon fiber body",
                            Name = "Portability",
                            ProductId = new Guid("82d2d24a-1dc5-491b-926d-b4e72d168115")
                        },
                        new
                        {
                            Id = new Guid("960b60da-6796-46ce-bb6f-6cc84ef70f1f"),
                            Description = "Legendary ThinkPad tactile typing",
                            Name = "Keyboard",
                            ProductId = new Guid("82d2d24a-1dc5-491b-926d-b4e72d168115")
                        },
                        new
                        {
                            Id = new Guid("d891dc16-0e25-4412-b43f-e5f5e2450a70"),
                            Description = "Fingerprint + IR camera",
                            Name = "Security",
                            ProductId = new Guid("82d2d24a-1dc5-491b-926d-b4e72d168115")
                        },
                        new
                        {
                            Id = new Guid("9c7ad3cf-06f1-4a96-844f-f7c6ae5e0249"),
                            Description = "15+ hour runtime",
                            Name = "Battery",
                            ProductId = new Guid("82d2d24a-1dc5-491b-926d-b4e72d168115")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000201"),
                            Description = "425 phase-detection points",
                            Name = "Autofocus",
                            ProductId = new Guid("7777aaaa-bbbb-cccc-dddd-eeee00000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000202"),
                            Description = "180° tiltable LCD",
                            Name = "Screen",
                            ProductId = new Guid("7777aaaa-bbbb-cccc-dddd-eeee00000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000203"),
                            Description = "Wi-Fi, NFC, Bluetooth",
                            Name = "Connectivity",
                            ProductId = new Guid("7777aaaa-bbbb-cccc-dddd-eeee00000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000204"),
                            Description = "Magnesium alloy body",
                            Name = "Build",
                            ProductId = new Guid("7777aaaa-bbbb-cccc-dddd-eeee00000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000251"),
                            Description = "Supports Bixby, Alexa, and Google Assistant",
                            Name = "Voice Control",
                            ProductId = new Guid("7777eeee-ffff-aaaa-bbbb-cccc00000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000252"),
                            Description = "Quantum HDR with deep contrast",
                            Name = "HDR",
                            ProductId = new Guid("7777eeee-ffff-aaaa-bbbb-cccc00000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000253"),
                            Description = "Slim look with almost no bezel",
                            Name = "Design",
                            ProductId = new Guid("7777eeee-ffff-aaaa-bbbb-cccc00000001")
                        },
                        new
                        {
                            Id = new Guid("f7f4c40c-82d3-488f-bf1a-9094dc2048b0"),
                            Description = "Casual yet rugged",
                            Name = "Style",
                            ProductId = new Guid("b416e570-f438-4c53-9dd1-1b8388dd181b")
                        },
                        new
                        {
                            Id = new Guid("905cdea9-9662-4f42-82d4-c0b24e957ee8"),
                            Description = "Pairs with any outfit",
                            Name = "Versatility",
                            ProductId = new Guid("b416e570-f438-4c53-9dd1-1b8388dd181b")
                        },
                        new
                        {
                            Id = new Guid("38c8f67f-7b05-4f06-8856-546a4e499d5c"),
                            Description = "Made to last",
                            Name = "Durability",
                            ProductId = new Guid("b416e570-f438-4c53-9dd1-1b8388dd181b")
                        },
                        new
                        {
                            Id = new Guid("7aeefca5-b681-41cf-baef-0ab5306f250a"),
                            Description = "Machine washable",
                            Name = "Care",
                            ProductId = new Guid("b416e570-f438-4c53-9dd1-1b8388dd181b")
                        },
                        new
                        {
                            Id = new Guid("b9b205bb-9a76-4456-a0cb-dc28e4fce1c5"),
                            Description = "Elegant and breezy",
                            Name = "Style",
                            ProductId = new Guid("6f4c984f-7baf-4a39-aab3-018202f20de5")
                        },
                        new
                        {
                            Id = new Guid("781153a3-0555-49ae-987e-09dbde5172ee"),
                            Description = "Suitable for casual and formal",
                            Name = "Versatility",
                            ProductId = new Guid("6f4c984f-7baf-4a39-aab3-018202f20de5")
                        },
                        new
                        {
                            Id = new Guid("a5fd738e-6d61-49f7-b51c-dcdbbcd27644"),
                            Description = "Breathable fabric",
                            Name = "Comfort",
                            ProductId = new Guid("6f4c984f-7baf-4a39-aab3-018202f20de5")
                        },
                        new
                        {
                            Id = new Guid("fbf426f5-78e4-4d4f-b183-3fcf3870e04b"),
                            Description = "Machine washable",
                            Name = "Care",
                            ProductId = new Guid("6f4c984f-7baf-4a39-aab3-018202f20de5")
                        },
                        new
                        {
                            Id = new Guid("0072b22f-4b44-4c2b-8fe9-996e1b0aa832"),
                            Description = "Visible Air Max unit",
                            Name = "Cushioning",
                            ProductId = new Guid("c26e813d-2f01-4d0b-8d3c-209fbe35b7c2")
                        },
                        new
                        {
                            Id = new Guid("2bda4a7f-cd79-47b1-94bb-d237e52794ae"),
                            Description = "Sporty & stylish",
                            Name = "Design",
                            ProductId = new Guid("c26e813d-2f01-4d0b-8d3c-209fbe35b7c2")
                        },
                        new
                        {
                            Id = new Guid("8412c1ff-2650-42e3-844b-9a1c36522aa4"),
                            Description = "Foam midsole",
                            Name = "Comfort",
                            ProductId = new Guid("c26e813d-2f01-4d0b-8d3c-209fbe35b7c2")
                        },
                        new
                        {
                            Id = new Guid("71f2be1d-44a1-4216-96c5-589cba78d144"),
                            Description = "Perforated upper",
                            Name = "Breathability",
                            ProductId = new Guid("c26e813d-2f01-4d0b-8d3c-209fbe35b7c2")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000431"),
                            Description = "Wide brim blocks UV rays",
                            Name = "Sun Protection",
                            ProductId = new Guid("7777bbbb-cccc-dddd-eeee-ffff00000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000432"),
                            Description = "Breathable and lightweight",
                            Name = "Design",
                            ProductId = new Guid("7777bbbb-cccc-dddd-eeee-ffff00000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000261"),
                            Description = "Classic biker look with zipper closure",
                            Name = "Style",
                            ProductId = new Guid("7777ffff-aaaa-bbbb-cccc-dddd00000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000262"),
                            Description = "Fully lined for winter use",
                            Name = "Warmth",
                            ProductId = new Guid("7777ffff-aaaa-bbbb-cccc-dddd00000002")
                        },
                        new
                        {
                            Id = new Guid("35198d10-7fbf-4919-aa3f-527c7e76abcb"),
                            Description = "Sleek and minimal",
                            Name = "Design",
                            ProductId = new Guid("74a46f1c-1054-408d-89dc-8ca00285660f")
                        },
                        new
                        {
                            Id = new Guid("6334b668-3933-4abb-8d5d-4324bb4ed08a"),
                            Description = "Solid wood construction",
                            Name = "Durability",
                            ProductId = new Guid("74a46f1c-1054-408d-89dc-8ca00285660f")
                        },
                        new
                        {
                            Id = new Guid("b6e56093-2fc5-473d-818a-26a9e5b52f82"),
                            Description = "Easy to wipe clean",
                            Name = "Maintenance",
                            ProductId = new Guid("74a46f1c-1054-408d-89dc-8ca00285660f")
                        },
                        new
                        {
                            Id = new Guid("f4eb7825-2ffd-4d1f-a9ba-5635ea698534"),
                            Description = "Quick setup included",
                            Name = "Assembly",
                            ProductId = new Guid("74a46f1c-1054-408d-89dc-8ca00285660f")
                        },
                        new
                        {
                            Id = new Guid("431d02bb-1446-4d9a-8f71-207b6d0ffbe1"),
                            Description = "Simple and modern",
                            Name = "Design",
                            ProductId = new Guid("b7a6497f-c4cb-4d7c-afe5-167c02cbf170")
                        },
                        new
                        {
                            Id = new Guid("146e8860-5f1a-4086-85a1-bcbe5e16a982"),
                            Description = "Tool-free assembly",
                            Name = "Assembly",
                            ProductId = new Guid("b7a6497f-c4cb-4d7c-afe5-167c02cbf170")
                        },
                        new
                        {
                            Id = new Guid("a3a37d1e-26e9-40f0-b935-1e5e43b83e02"),
                            Description = "Budget-friendly option",
                            Name = "Affordability",
                            ProductId = new Guid("b7a6497f-c4cb-4d7c-afe5-167c02cbf170")
                        },
                        new
                        {
                            Id = new Guid("a90fa301-e8e3-4097-a507-cdc1a9f5b008"),
                            Description = "Lightweight design",
                            Name = "Portability",
                            ProductId = new Guid("b7a6497f-c4cb-4d7c-afe5-167c02cbf170")
                        },
                        new
                        {
                            Id = new Guid("f2f2c8fb-0f90-420c-9ed1-5947728f615a"),
                            Description = "Modern minimalist",
                            Name = "Style",
                            ProductId = new Guid("2ad39762-dbd2-4959-bf36-03f30e3a3a1c")
                        },
                        new
                        {
                            Id = new Guid("60e84a9a-e016-4654-a8e4-24e48dc26156"),
                            Description = "Compact storage",
                            Name = "Convenience",
                            ProductId = new Guid("2ad39762-dbd2-4959-bf36-03f30e3a3a1c")
                        },
                        new
                        {
                            Id = new Guid("9f179493-b4d6-4a53-bdc1-d5dd3fa189e3"),
                            Description = "Easy clean surface",
                            Name = "Maintenance",
                            ProductId = new Guid("2ad39762-dbd2-4959-bf36-03f30e3a3a1c")
                        },
                        new
                        {
                            Id = new Guid("e7a8d1a9-30a1-4b89-80d3-90e5a948d914"),
                            Description = "DIY friendly",
                            Name = "Assembly",
                            ProductId = new Guid("2ad39762-dbd2-4959-bf36-03f30e3a3a1c")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000421"),
                            Description = "Provides lumbar support and breathable mesh back",
                            Name = "Ergonomic Design",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000422"),
                            Description = "360° swivel and smooth rolling wheels",
                            Name = "Mobility",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000423"),
                            Description = "Adjustable height and tilt tension",
                            Name = "Adjustability",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000281"),
                            Description = "Supports up to 30kg per shelf",
                            Name = "Durability",
                            ProductId = new Guid("7777dddd-aaaa-bbbb-cccc-eeee00000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000282"),
                            Description = "Rustic farmhouse design",
                            Name = "Style",
                            ProductId = new Guid("7777dddd-aaaa-bbbb-cccc-eeee00000003")
                        },
                        new
                        {
                            Id = new Guid("75e0cc52-9a6b-4157-b453-57f390790cf4"),
                            Description = "Laser detects microscopic dust",
                            Name = "Performance",
                            ProductId = new Guid("a055168e-3130-4b0a-8495-60e25d62e057")
                        },
                        new
                        {
                            Id = new Guid("1822758b-de5a-4f53-aea5-c624d90add9b"),
                            Description = "Intelligent optimization",
                            Name = "Efficiency",
                            ProductId = new Guid("a055168e-3130-4b0a-8495-60e25d62e057")
                        },
                        new
                        {
                            Id = new Guid("9b6befa0-ebf3-4701-a70c-a8bb3c8689a1"),
                            Description = "Whole-machine HEPA filtration",
                            Name = "Filter",
                            ProductId = new Guid("a055168e-3130-4b0a-8495-60e25d62e057")
                        },
                        new
                        {
                            Id = new Guid("7c49174a-ea92-4119-b3bb-2951ffbaba67"),
                            Description = "Multiple attachments included",
                            Name = "Tools",
                            ProductId = new Guid("a055168e-3130-4b0a-8495-60e25d62e057")
                        },
                        new
                        {
                            Id = new Guid("19738491-3030-4b3b-9819-353117c4fc5e"),
                            Description = "Quick-drying ventilation base",
                            Name = "Hygiene",
                            ProductId = new Guid("25c4ff90-79e6-4d88-bda6-cce18f8cb5a0")
                        },
                        new
                        {
                            Id = new Guid("4a1174ed-faf9-41de-9769-98a7c31560ef"),
                            Description = "Flexible anti-scratch bristles",
                            Name = "Durability",
                            ProductId = new Guid("25c4ff90-79e6-4d88-bda6-cce18f8cb5a0")
                        },
                        new
                        {
                            Id = new Guid("a40b5a25-8d40-47d5-b509-cf01d6cb44f6"),
                            Description = "No-drill installation",
                            Name = "Convenience",
                            ProductId = new Guid("25c4ff90-79e6-4d88-bda6-cce18f8cb5a0")
                        },
                        new
                        {
                            Id = new Guid("b8b470f9-3720-4a95-918b-02f6ddbb0f5d"),
                            Description = "Reusable & replaceable head",
                            Name = "Eco-Friendly",
                            ProductId = new Guid("25c4ff90-79e6-4d88-bda6-cce18f8cb5a0")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000401"),
                            Description = "Reinforced carry handles for easy transport",
                            Name = "Handles",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000402"),
                            Description = "Breathable mesh sides",
                            Name = "Design",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000403"),
                            Description = "Compact foldable design",
                            Name = "Storage",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000404"),
                            Description = "Ideal for dorms, apartments, or travel",
                            Name = "Use",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000481"),
                            Description = "App control and air quality feedback",
                            Name = "Smart Features",
                            ProductId = new Guid("7777eeee-aaaa-bbbb-cccc-dddd00000006")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000482"),
                            Description = "Operates as low as 33 dB",
                            Name = "Silent Mode",
                            ProductId = new Guid("7777eeee-aaaa-bbbb-cccc-dddd00000006")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000291"),
                            Description = "Removes bacteria, viruses, and TDS",
                            Name = "Purification",
                            ProductId = new Guid("7777eeee-aaaa-bbbb-cccc-dddd00000004")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000292"),
                            Description = "Wall-mounted with transparent cover",
                            Name = "Design",
                            ProductId = new Guid("7777eeee-aaaa-bbbb-cccc-dddd00000004")
                        },
                        new
                        {
                            Id = new Guid("1e4cc7b4-51a5-4bfb-8e36-1ce9a2a6c8b0"),
                            Description = "Brushless motor",
                            Name = "Performance",
                            ProductId = new Guid("3c7b48ff-2b17-456e-b6d9-1e4701c56ab2")
                        },
                        new
                        {
                            Id = new Guid("2a222bb7-cc32-4e2f-9ad3-2ad2aaf1fc6f"),
                            Description = "Heavy-duty construction",
                            Name = "Durability",
                            ProductId = new Guid("3c7b48ff-2b17-456e-b6d9-1e4701c56ab2")
                        },
                        new
                        {
                            Id = new Guid("6ab182fd-45bb-4747-93d7-4533cdd9f88c"),
                            Description = "LED work light",
                            Name = "Convenience",
                            ProductId = new Guid("3c7b48ff-2b17-456e-b6d9-1e4701c56ab2")
                        },
                        new
                        {
                            Id = new Guid("1c6c2255-9535-4520-84ee-b00db4a2225d"),
                            Description = "Ergonomic handle",
                            Name = "Grip",
                            ProductId = new Guid("3c7b48ff-2b17-456e-b6d9-1e4701c56ab2")
                        },
                        new
                        {
                            Id = new Guid("49b29ac4-ed20-4592-8690-304aa1e80df3"),
                            Description = "High torque for tough jobs",
                            Name = "Performance",
                            ProductId = new Guid("4c73d114-2aa1-4f4c-aa7a-48038f1f95fc")
                        },
                        new
                        {
                            Id = new Guid("8166c8f2-21fd-439c-ad3f-1eabe29bc76f"),
                            Description = "Ergonomic grip",
                            Name = "Comfort",
                            ProductId = new Guid("4c73d114-2aa1-4f4c-aa7a-48038f1f95fc")
                        },
                        new
                        {
                            Id = new Guid("c4c5a991-e2cd-4d1b-a176-036f70667cb7"),
                            Description = "For dark areas",
                            Name = "LED Light",
                            ProductId = new Guid("4c73d114-2aa1-4f4c-aa7a-48038f1f95fc")
                        },
                        new
                        {
                            Id = new Guid("a3c061b9-91f9-4d01-be37-4eb05da33ac5"),
                            Description = "Metal gear housing",
                            Name = "Durability",
                            ProductId = new Guid("4c73d114-2aa1-4f4c-aa7a-48038f1f95fc")
                        },
                        new
                        {
                            Id = new Guid("6b747748-3a2a-4c1a-a1b3-8e7d7dbba1f1"),
                            Description = "Textured palm for firm hold",
                            Name = "Grip",
                            ProductId = new Guid("48f6ef8b-b2b2-4e33-b3f1-df7c06b60f95")
                        },
                        new
                        {
                            Id = new Guid("34233ac6-0e32-42b1-9e4f-7c83bcd8fd5f"),
                            Description = "Reinforced knuckles",
                            Name = "Protection",
                            ProductId = new Guid("48f6ef8b-b2b2-4e33-b3f1-df7c06b60f95")
                        },
                        new
                        {
                            Id = new Guid("de2955e6-e21e-4ed2-a65e-3b73f708dd7a"),
                            Description = "Mesh back panel",
                            Name = "Breathability",
                            ProductId = new Guid("48f6ef8b-b2b2-4e33-b3f1-df7c06b60f95")
                        },
                        new
                        {
                            Id = new Guid("1a2ef03d-456e-4edb-a7b0-31a7088b0596"),
                            Description = "Flexible and snug fit",
                            Name = "Fit",
                            ProductId = new Guid("48f6ef8b-b2b2-4e33-b3f1-df7c06b60f95")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000241"),
                            Description = "Soft brow pad and adjustable fit",
                            Name = "Comfort",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000005")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000242"),
                            Description = "Impact-resistant outer shell",
                            Name = "Durability",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000005")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000243"),
                            Description = "Accessory slots for face shields and earmuffs",
                            Name = "Compatibility",
                            ProductId = new Guid("8888aaaa-bbbb-cccc-dddd-eeee00000005")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000361"),
                            Description = "2-speed gearbox for optimized performance",
                            Name = "Speed",
                            ProductId = new Guid("7777ffff-aaaa-bbbb-cccc-dddd00000005")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000362"),
                            Description = "Robust housing and overload protection",
                            Name = "Durability",
                            ProductId = new Guid("7777ffff-aaaa-bbbb-cccc-dddd00000005")
                        });
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Reviews.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.PrimitiveCollection<string>("ImageUrls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Rating")
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3,2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.PrimitiveCollection<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Article = "Excellent phone",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrls = "[]",
                            Message = "Battery lasts all day. The screen is incredibly bright and vivid.",
                            ProductId = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a"),
                            Rating = 5.0m,
                            RowVersion = new byte[0],
                            Tags = "[\"battery\",\"screen\"]",
                            UserId = new Guid("7a612c2e-ebc1-4a30-ac54-cccb566a1086")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Article = "Good but expensive",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrls = "[]",
                            Message = "Features are great, but the price is a bit high.",
                            ProductId = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a"),
                            Rating = 4.0m,
                            RowVersion = new byte[0],
                            Tags = "[\"price\"]",
                            UserId = new Guid("fa67eef0-62a7-4e61-83ef-5a054e84ce41")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Article = "Top sound quality",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrls = "[]",
                            Message = "Perfect for flights. Noise cancelling works like magic.",
                            ProductId = new Guid("a2c28a83-cfea-46ee-87e3-906f9e90f1aa"),
                            Rating = 5.0m,
                            RowVersion = new byte[0],
                            Tags = "[\"sound\",\"noise cancelling\"]",
                            UserId = new Guid("82bf572a-ab40-4571-b1a2-ec9dcf9ccb7d")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Article = "Comfortable",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrls = "[]",
                            Message = "Long usage with no discomfort. Battery could be better though.",
                            ProductId = new Guid("a2c28a83-cfea-46ee-87e3-906f9e90f1aa"),
                            Rating = 4.2m,
                            RowVersion = new byte[0],
                            Tags = "[\"comfort\",\"battery\"]",
                            UserId = new Guid("b116a743-b108-494a-abb5-a0c9673edbef")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Article = "Stylish and solid",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrls = "[]",
                            Message = "Looks very elegant and feels sturdy. Love the natural finish.",
                            ProductId = new Guid("74a46f1c-1054-408d-89dc-8ca00285660f"),
                            Rating = 4.7m,
                            RowVersion = new byte[0],
                            Tags = "[\"design\",\"durability\"]",
                            UserId = new Guid("2583c105-264b-45ee-a535-3b939f4dd428")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            Article = "Beast of a drill",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrls = "[]",
                            Message = "Very powerful and long-lasting battery. Great for home use.",
                            ProductId = new Guid("4c73d114-2aa1-4f4c-aa7a-48038f1f95fc"),
                            Rating = 5.0m,
                            RowVersion = new byte[0],
                            Tags = "[\"power\",\"performance\"]",
                            UserId = new Guid("741ddf70-bcb9-44ba-a666-246072dd8c82")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            Article = "Classic style",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrls = "[]",
                            Message = "Fits perfectly and looks good with anything. My go-to jacket.",
                            ProductId = new Guid("b416e570-f438-4c53-9dd1-1b8388dd181b"),
                            Rating = 4.9m,
                            RowVersion = new byte[0],
                            Tags = "[\"fit\",\"style\"]",
                            UserId = new Guid("4f33466b-00cd-424d-9c5a-2356d9fc179d")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            Article = "Impressive cleaning",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrls = "[]",
                            Message = "Powerful suction and laser feature is actually helpful.",
                            ProductId = new Guid("a055168e-3130-4b0a-8495-60e25d62e057"),
                            Rating = 4.8m,
                            RowVersion = new byte[0],
                            Tags = "[\"vacuum\",\"laser\"]",
                            UserId = new Guid("0986d7ae-31ff-42d8-a9d4-450625e8dd76")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            Article = "Simple and elegant",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrls = "[]",
                            Message = "Easy to assemble, light weight, looks clean and modern.",
                            ProductId = new Guid("74a46f1c-1054-408d-89dc-8ca00285660f"),
                            Rating = 4.6m,
                            RowVersion = new byte[0],
                            Tags = "[\"design\",\"assembly\"]",
                            UserId = new Guid("9f73b2c1-71c7-434b-8fcd-b3ca7a6eae98")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            Article = "Camera is next level",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrls = "[]",
                            Message = "200MP might be overkill, but wow, it delivers detail.",
                            ProductId = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a"),
                            Rating = 4.9m,
                            RowVersion = new byte[0],
                            Tags = "[\"camera\"]",
                            UserId = new Guid("a4f0b9c1-47e8-46ff-a9e5-d388693cffef")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000011"),
                            Article = "Good value",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrls = "[]",
                            Message = "High-quality fabric, didn’t expect it for this price.",
                            ProductId = new Guid("b416e570-f438-4c53-9dd1-1b8388dd181b"),
                            Rating = 4.4m,
                            RowVersion = new byte[0],
                            Tags = "[\"value\",\"material\"]",
                            UserId = new Guid("2583c105-264b-45ee-a535-3b939f4dd428")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000012"),
                            Article = "Not for running",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrls = "[]",
                            Message = "Slips off easily if you're jogging. Great otherwise.",
                            ProductId = new Guid("a2c28a83-cfea-46ee-87e3-906f9e90f1aa"),
                            Rating = 3.9m,
                            RowVersion = new byte[0],
                            Tags = "[\"use case\"]",
                            UserId = new Guid("a4f0b9c1-47e8-46ff-a9e5-d388693cffef")
                        });
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Reviews.ReviewLike", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReviewId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LikedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "ReviewId");

                    b.HasIndex("ReviewId");

                    b.ToTable("ReviewLikes");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("fa67eef0-62a7-4e61-83ef-5a054e84ce41"),
                            ReviewId = new Guid("00000000-0000-0000-0000-000000000001"),
                            LikedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("b116a743-b108-494a-abb5-a0c9673edbef"),
                            ReviewId = new Guid("00000000-0000-0000-0000-000000000001"),
                            LikedAt = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("a4f0b9c1-47e8-46ff-a9e5-d388693cffef"),
                            ReviewId = new Guid("00000000-0000-0000-0000-000000000002"),
                            LikedAt = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("7a612c2e-ebc1-4a30-ac54-cccb566a1086"),
                            ReviewId = new Guid("00000000-0000-0000-0000-000000000003"),
                            LikedAt = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("741ddf70-bcb9-44ba-a666-246072dd8c82"),
                            ReviewId = new Guid("00000000-0000-0000-0000-000000000004"),
                            LikedAt = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("0986d7ae-31ff-42d8-a9d4-450625e8dd76"),
                            ReviewId = new Guid("00000000-0000-0000-0000-000000000005"),
                            LikedAt = new DateTime(2024, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("2583c105-264b-45ee-a535-3b939f4dd428"),
                            ReviewId = new Guid("00000000-0000-0000-0000-000000000006"),
                            LikedAt = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("4f33466b-00cd-424d-9c5a-2356d9fc179d"),
                            ReviewId = new Guid("00000000-0000-0000-0000-000000000007"),
                            LikedAt = new DateTime(2024, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("9f73b2c1-71c7-434b-8fcd-b3ca7a6eae98"),
                            ReviewId = new Guid("00000000-0000-0000-0000-000000000008"),
                            LikedAt = new DateTime(2024, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("fa67eef0-62a7-4e61-83ef-5a054e84ce41"),
                            ReviewId = new Guid("00000000-0000-0000-0000-000000000009"),
                            LikedAt = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("82bf572a-ab40-4571-b1a2-ec9dcf9ccb7d"),
                            ReviewId = new Guid("00000000-0000-0000-0000-000000000010"),
                            LikedAt = new DateTime(2024, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("a4f0b9c1-47e8-46ff-a9e5-d388693cffef"),
                            ReviewId = new Guid("00000000-0000-0000-0000-000000000011"),
                            LikedAt = new DateTime(2024, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("b116a743-b108-494a-abb5-a0c9673edbef"),
                            ReviewId = new Guid("00000000-0000-0000-0000-000000000012"),
                            LikedAt = new DateTime(2024, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Users.CartList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("CartLists");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c51758a1-f536-463b-a921-cc9206a34927"),
                            AddedAt = new DateTime(2024, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 69.99m,
                            ProductId = new Guid("b416e570-f438-4c53-9dd1-1b8388dd181b"),
                            Quantity = 2,
                            UserId = new Guid("0986d7ae-31ff-42d8-a9d4-450625e8dd76")
                        },
                        new
                        {
                            Id = new Guid("a2437747-dfe4-4d24-8cdf-5e44abbd2c7f"),
                            AddedAt = new DateTime(2024, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1199.99m,
                            ProductId = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a"),
                            Quantity = 3,
                            UserId = new Guid("a4f0b9c1-47e8-46ff-a9e5-d388693cffef")
                        },
                        new
                        {
                            Id = new Guid("ab6454d8-69c2-4e81-8313-d2cdc0b1cf9c"),
                            AddedAt = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 349.99m,
                            ProductId = new Guid("a2c28a83-cfea-46ee-87e3-906f9e90f1aa"),
                            Quantity = 3,
                            UserId = new Guid("fa67eef0-62a7-4e61-83ef-5a054e84ce41")
                        },
                        new
                        {
                            Id = new Guid("229de273-0066-4a4a-8678-21eb61416578"),
                            AddedAt = new DateTime(2024, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 69.99m,
                            ProductId = new Guid("b416e570-f438-4c53-9dd1-1b8388dd181b"),
                            Quantity = 1,
                            UserId = new Guid("a4f0b9c1-47e8-46ff-a9e5-d388693cffef")
                        },
                        new
                        {
                            Id = new Guid("85caea79-0bb1-4649-9102-142eb37c7664"),
                            AddedAt = new DateTime(2024, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1199.99m,
                            ProductId = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a"),
                            Quantity = 1,
                            UserId = new Guid("fa67eef0-62a7-4e61-83ef-5a054e84ce41")
                        });
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Users.EmailVerification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("TempPasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("Email", "Type");

                    b.ToTable("EmailVerifications");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Users.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a612c2e-ebc1-4a30-ac54-cccb566a1086"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michaelterrell1@example.com",
                            FirstName = "Kathy",
                            LastName = "Thomas",
                            PasswordHash = "$2b$12$JthvV5eK9b0BX972kty2PuNuUd4Nk3wGLklIlj0HX2wInNS/78H7u",
                            Role = 0,
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("fa67eef0-62a7-4e61-83ef-5a054e84ce41"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "april992@example.com",
                            FirstName = "Amanda",
                            LastName = "Decker",
                            PasswordHash = "$2b$12$smw9z353sKgENxXVnQs6g.1EHa6UYkFh9jpq/ILRjrzDzY5lS9Nxa",
                            Role = 0,
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("82bf572a-ab40-4571-b1a2-ec9dcf9ccb7d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mjones3@example.com",
                            FirstName = "Samantha",
                            LastName = "Moore",
                            PasswordHash = "$2b$12$XL/cSsxTSvYunP0ws3PTfOowebceqDPLauAE1qJcpljQwPgXXvTIG",
                            Role = 0,
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("b116a743-b108-494a-abb5-a0c9673edbef"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "heather934@example.com",
                            FirstName = "Brittany",
                            LastName = "Edwards",
                            PasswordHash = "$2b$12$KPKg2yfoi0KQriKvrpKtYe3lGI67jJMkfncwg79HN1K0ln/PQwkym",
                            Role = 0,
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("2583c105-264b-45ee-a535-3b939f4dd428"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "suzannegonzalez5@example.com",
                            FirstName = "Jennifer",
                            LastName = "Delacruz",
                            PasswordHash = "$2b$12$bUoOhVkj0HkDTCZlh8/n9O2m7s7.FwtwsJYj4fiR4OnZN2cKl9S9K",
                            Role = 0,
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("741ddf70-bcb9-44ba-a666-246072dd8c82"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "kimberly906@example.com",
                            FirstName = "Daniel",
                            LastName = "Kaiser",
                            PasswordHash = "$2b$12$zhpKLnHJl9jZxDcwwGhbyO8yDViIlu0E.WrbucVxYqfSvZxJqIMzm",
                            Role = 0,
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("4f33466b-00cd-424d-9c5a-2356d9fc179d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "eric737@example.com",
                            FirstName = "John",
                            LastName = "Hernandez",
                            PasswordHash = "$2b$12$hZMooIIRDBrx/2SZ9FbS9uuT/M4esP1.z1UFFvLHfKrcLYLccRTz6",
                            Role = 0,
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("0986d7ae-31ff-42d8-a9d4-450625e8dd76"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hallshaun8@example.com",
                            FirstName = "Charles",
                            LastName = "Cook",
                            PasswordHash = "$2b$12$B./Bh7QhdcmttuAWXIt8dOp5Hul0w7YjOCMBCnGUfHQV4NvKfQ8Xe",
                            Role = 0,
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("9f73b2c1-71c7-434b-8fcd-b3ca7a6eae98"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "cannonkelly9@example.com",
                            FirstName = "Christopher",
                            LastName = "Salazar",
                            PasswordHash = "$2b$12$r9HYkq1hv0wiwZh05W6fq.6b3qoZxXrOfr/xrFSA//x69Qu77mOJO",
                            Role = 0,
                            RowVersion = new byte[0],
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("a4f0b9c1-47e8-46ff-a9e5-d388693cffef"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nparrish10@example.com",
                            FirstName = "Jason",
                            LastName = "Meza",
                            PasswordHash = "$2b$12$ix2jyWO01HHxwhtmLFIFXO/JbQ8eqT.IaJw5xrGAgcXbN/HL7ZIZO",
                            Role = 0,
                            RowVersion = new byte[0],
                            Status = 0
                        });
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Users.Wishlist", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("WishlistItems");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("7a612c2e-ebc1-4a30-ac54-cccb566a1086"),
                            ProductId = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a"),
                            AddedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("fa67eef0-62a7-4e61-83ef-5a054e84ce41"),
                            ProductId = new Guid("a2c28a83-cfea-46ee-87e3-906f9e90f1aa"),
                            AddedAt = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("82bf572a-ab40-4571-b1a2-ec9dcf9ccb7d"),
                            ProductId = new Guid("b416e570-f438-4c53-9dd1-1b8388dd181b"),
                            AddedAt = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("b116a743-b108-494a-abb5-a0c9673edbef"),
                            ProductId = new Guid("74a46f1c-1054-408d-89dc-8ca00285660f"),
                            AddedAt = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("2583c105-264b-45ee-a535-3b939f4dd428"),
                            ProductId = new Guid("a055168e-3130-4b0a-8495-60e25d62e057"),
                            AddedAt = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("741ddf70-bcb9-44ba-a666-246072dd8c82"),
                            ProductId = new Guid("4c73d114-2aa1-4f4c-aa7a-48038f1f95fc"),
                            AddedAt = new DateTime(2024, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("4f33466b-00cd-424d-9c5a-2356d9fc179d"),
                            ProductId = new Guid("3c5a4868-3b2d-4352-9e12-502a56bce48a"),
                            AddedAt = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("0986d7ae-31ff-42d8-a9d4-450625e8dd76"),
                            ProductId = new Guid("a2c28a83-cfea-46ee-87e3-906f9e90f1aa"),
                            AddedAt = new DateTime(2024, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("9f73b2c1-71c7-434b-8fcd-b3ca7a6eae98"),
                            ProductId = new Guid("b416e570-f438-4c53-9dd1-1b8388dd181b"),
                            AddedAt = new DateTime(2024, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("a4f0b9c1-47e8-46ff-a9e5-d388693cffef"),
                            ProductId = new Guid("74a46f1c-1054-408d-89dc-8ca00285660f"),
                            AddedAt = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Categories.Category", b =>
                {
                    b.HasOne("AmazonKiller.Domain.Entities.Categories.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Collections.Collection", b =>
                {
                    b.HasOne("AmazonKiller.Domain.Entities.Categories.Category", "Category")
                        .WithMany("Collections")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsMany("AmazonKiller.Domain.Entities.Collections.CollectionFilter", "Filters", b1 =>
                        {
                            b1.Property<Guid>("CollectionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Key")
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.Property<string>("Value")
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.HasKey("CollectionId", "Key", "Value");

                            b1.ToTable("CollectionFilters", (string)null);

                            b1.WithOwner("Collection")
                                .HasForeignKey("CollectionId");

                            b1.Navigation("Collection");

                            b1.HasData(
                                new
                                {
                                    CollectionId = new Guid("10000000-0000-0000-0000-000000000001"),
                                    Key = "Battery",
                                    Value = "5000mAh"
                                },
                                new
                                {
                                    CollectionId = new Guid("10000000-0000-0000-0000-000000000001"),
                                    Key = "Camera",
                                    Value = "200MP"
                                },
                                new
                                {
                                    CollectionId = new Guid("10000000-0000-0000-0000-000000000001"),
                                    Key = "Storage",
                                    Value = "256GB"
                                },
                                new
                                {
                                    CollectionId = new Guid("10000000-0000-0000-0000-000000000002"),
                                    Key = "Type",
                                    Value = "Over-ear"
                                },
                                new
                                {
                                    CollectionId = new Guid("10000000-0000-0000-0000-000000000002"),
                                    Key = "Noise Cancellation",
                                    Value = "Yes"
                                },
                                new
                                {
                                    CollectionId = new Guid("10000000-0000-0000-0000-000000000003"),
                                    Key = "Material",
                                    Value = "100% Cotton"
                                },
                                new
                                {
                                    CollectionId = new Guid("10000000-0000-0000-0000-000000000003"),
                                    Key = "Fit",
                                    Value = "Regular"
                                },
                                new
                                {
                                    CollectionId = new Guid("10000000-0000-0000-0000-000000000004"),
                                    Key = "Material",
                                    Value = "Oak wood"
                                },
                                new
                                {
                                    CollectionId = new Guid("10000000-0000-0000-0000-000000000004"),
                                    Key = "Finish",
                                    Value = "Natural varnish"
                                },
                                new
                                {
                                    CollectionId = new Guid("10000000-0000-0000-0000-000000000005"),
                                    Key = "Voltage",
                                    Value = "18V"
                                },
                                new
                                {
                                    CollectionId = new Guid("10000000-0000-0000-0000-000000000005"),
                                    Key = "Battery",
                                    Value = "2 x 5.0Ah Li-ion"
                                });
                        });

                    b.Navigation("Category");

                    b.Navigation("Filters");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Orders.Order", b =>
                {
                    b.HasOne("AmazonKiller.Domain.Entities.Users.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("AmazonKiller.Domain.Entities.Orders.OrderInfo", "Info", b1 =>
                        {
                            b1.Property<Guid>("OrderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("OrderedAt")
                                .HasColumnType("datetime2");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");

                            b1.OwnsOne("AmazonKiller.Domain.Entities.Orders.DeliveryInfo", "Delivery", b2 =>
                                {
                                    b2.Property<Guid>("OrderInfoOrderId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Email")
                                        .IsRequired()
                                        .HasMaxLength(255)
                                        .HasColumnType("nvarchar(255)");

                                    b2.Property<string>("FirstName")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.Property<string>("LastName")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)");

                                    b2.HasKey("OrderInfoOrderId");

                                    b2.ToTable("Orders");

                                    b2.WithOwner()
                                        .HasForeignKey("OrderInfoOrderId");

                                    b2.OwnsOne("AmazonKiller.Domain.Entities.Orders.Address", "Address", b3 =>
                                        {
                                            b3.Property<Guid>("DeliveryInfoOrderInfoOrderId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("ApartmentNumber")
                                                .HasMaxLength(20)
                                                .HasColumnType("nvarchar(20)");

                                            b3.Property<string>("City")
                                                .IsRequired()
                                                .HasMaxLength(100)
                                                .HasColumnType("nvarchar(100)");

                                            b3.Property<string>("Country")
                                                .IsRequired()
                                                .HasMaxLength(100)
                                                .HasColumnType("nvarchar(100)");

                                            b3.Property<string>("HouseNumber")
                                                .IsRequired()
                                                .HasMaxLength(20)
                                                .HasColumnType("nvarchar(20)");

                                            b3.Property<Guid>("Id")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("PostCode")
                                                .IsRequired()
                                                .HasMaxLength(20)
                                                .HasColumnType("nvarchar(20)");

                                            b3.Property<string>("State")
                                                .HasMaxLength(100)
                                                .HasColumnType("nvarchar(100)");

                                            b3.Property<string>("Street")
                                                .IsRequired()
                                                .HasMaxLength(100)
                                                .HasColumnType("nvarchar(100)");

                                            b3.HasKey("DeliveryInfoOrderInfoOrderId");

                                            b3.ToTable("Orders");

                                            b3.WithOwner()
                                                .HasForeignKey("DeliveryInfoOrderInfoOrderId");

                                            b3.HasData(
                                                new
                                                {
                                                    DeliveryInfoOrderInfoOrderId = new Guid("8d39ee25-6be0-46aa-8a1f-75407bd3fa0d"),
                                                    City = "Odessa",
                                                    Country = "Ukraine",
                                                    HouseNumber = "123A",
                                                    Id = new Guid("00000000-0000-0000-0000-000000000a01"),
                                                    PostCode = "65000",
                                                    Street = "Main St"
                                                },
                                                new
                                                {
                                                    DeliveryInfoOrderInfoOrderId = new Guid("2f2339d3-98a9-4039-b5fe-fa6d8e9d66ba"),
                                                    City = "Kyiv",
                                                    Country = "Ukraine",
                                                    HouseNumber = "45B",
                                                    Id = new Guid("00000000-0000-0000-0000-000000000a02"),
                                                    PostCode = "02000",
                                                    Street = "Central Ave"
                                                },
                                                new
                                                {
                                                    DeliveryInfoOrderInfoOrderId = new Guid("4e6f98ed-d665-470b-992b-dd872c86abe2"),
                                                    City = "Lviv",
                                                    Country = "Ukraine",
                                                    HouseNumber = "78C",
                                                    Id = new Guid("00000000-0000-0000-0000-000000000a03"),
                                                    PostCode = "79000",
                                                    Street = "Green Blvd"
                                                });
                                        });

                                    b2.Navigation("Address")
                                        .IsRequired();

                                    b2.HasData(
                                        new
                                        {
                                            OrderInfoOrderId = new Guid("8d39ee25-6be0-46aa-8a1f-75407bd3fa0d"),
                                            Email = "pavlo@example.com",
                                            FirstName = "Pavlo",
                                            LastName = "Babchynskyi"
                                        },
                                        new
                                        {
                                            OrderInfoOrderId = new Guid("2f2339d3-98a9-4039-b5fe-fa6d8e9d66ba"),
                                            Email = "olena@example.com",
                                            FirstName = "Olena",
                                            LastName = "Rudenko"
                                        },
                                        new
                                        {
                                            OrderInfoOrderId = new Guid("4e6f98ed-d665-470b-992b-dd872c86abe2"),
                                            Email = "ivan@example.com",
                                            FirstName = "Ivan",
                                            LastName = "Petrenko"
                                        });
                                });

                            b1.OwnsOne("AmazonKiller.Domain.Entities.Orders.PaymentInfo", "Payment", b2 =>
                                {
                                    b2.Property<Guid>("OrderInfoOrderId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("CardNumber")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Cvv")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("ExpirationDate")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<int>("PaymentType")
                                        .HasColumnType("int");

                                    b2.HasKey("OrderInfoOrderId");

                                    b2.ToTable("Orders");

                                    b2.WithOwner()
                                        .HasForeignKey("OrderInfoOrderId");

                                    b2.HasData(
                                        new
                                        {
                                            OrderInfoOrderId = new Guid("8d39ee25-6be0-46aa-8a1f-75407bd3fa0d"),
                                            CardNumber = "4111111111111111",
                                            Cvv = "123",
                                            ExpirationDate = "12/25",
                                            PaymentType = 1
                                        },
                                        new
                                        {
                                            OrderInfoOrderId = new Guid("2f2339d3-98a9-4039-b5fe-fa6d8e9d66ba"),
                                            PaymentType = 0
                                        },
                                        new
                                        {
                                            OrderInfoOrderId = new Guid("4e6f98ed-d665-470b-992b-dd872c86abe2"),
                                            CardNumber = "5555555555554444",
                                            Cvv = "456",
                                            ExpirationDate = "08/26",
                                            PaymentType = 1
                                        });
                                });

                            b1.Navigation("Delivery")
                                .IsRequired();

                            b1.Navigation("Payment")
                                .IsRequired();

                            b1.HasData(
                                new
                                {
                                    OrderId = new Guid("8d39ee25-6be0-46aa-8a1f-75407bd3fa0d"),
                                    Id = new Guid("00000000-0000-0000-0000-00000000c001"),
                                    OrderedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                                },
                                new
                                {
                                    OrderId = new Guid("2f2339d3-98a9-4039-b5fe-fa6d8e9d66ba"),
                                    Id = new Guid("00000000-0000-0000-0000-00000000c002"),
                                    OrderedAt = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                                },
                                new
                                {
                                    OrderId = new Guid("4e6f98ed-d665-470b-992b-dd872c86abe2"),
                                    Id = new Guid("00000000-0000-0000-0000-00000000c003"),
                                    OrderedAt = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                                });
                        });

                    b.Navigation("Info")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Orders.OrderItem", b =>
                {
                    b.HasOne("AmazonKiller.Domain.Entities.Orders.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazonKiller.Domain.Entities.Products.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Products.Product", b =>
                {
                    b.HasOne("AmazonKiller.Domain.Entities.Categories.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Products.ProductAttribute", b =>
                {
                    b.HasOne("AmazonKiller.Domain.Entities.Products.Product", "Product")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Products.ProductFeature", b =>
                {
                    b.HasOne("AmazonKiller.Domain.Entities.Products.Product", "Product")
                        .WithMany("Features")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Reviews.Review", b =>
                {
                    b.HasOne("AmazonKiller.Domain.Entities.Products.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazonKiller.Domain.Entities.Users.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Reviews.ReviewLike", b =>
                {
                    b.HasOne("AmazonKiller.Domain.Entities.Reviews.Review", "Review")
                        .WithMany("LikesFromUsers")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazonKiller.Domain.Entities.Users.User", "User")
                        .WithMany("LikedReviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Review");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Users.CartList", b =>
                {
                    b.HasOne("AmazonKiller.Domain.Entities.Products.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazonKiller.Domain.Entities.Users.User", null)
                        .WithMany("Cart")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Users.EmailVerification", b =>
                {
                    b.HasOne("AmazonKiller.Domain.Entities.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Users.RefreshToken", b =>
                {
                    b.HasOne("AmazonKiller.Domain.Entities.Users.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Users.Wishlist", b =>
                {
                    b.HasOne("AmazonKiller.Domain.Entities.Products.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazonKiller.Domain.Entities.Users.User", "User")
                        .WithMany("Wishlists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Categories.Category", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Collections");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Orders.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Products.Product", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Features");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Reviews.Review", b =>
                {
                    b.Navigation("LikesFromUsers");
                });

            modelBuilder.Entity("AmazonKiller.Domain.Entities.Users.User", b =>
                {
                    b.Navigation("Cart");

                    b.Navigation("LikedReviews");

                    b.Navigation("Orders");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlists");
                });
#pragma warning restore 612, 618
        }
    }
}
