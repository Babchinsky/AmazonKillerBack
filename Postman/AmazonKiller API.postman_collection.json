{
	"info": {
		"_postman_id": "e3d2547b-303c-4df9-8d56-1064904b8ec0",
		"name": "AmazonKiller API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44878651",
		"_collection_link": "https://oleksiibabchynskyi.postman.co/workspace/Oleksii-Babchynskyi's-Workspace~e1274361-8aee-4fe3-89e4-e315a3e041be/collection/44878651-e3d2547b-303c-4df9-8d56-1064904b8ec0?action=share&source=collection_link&creator=44878651"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "nova-poshta",
					"item": [
						{
							"name": "/api/countries",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response Content-Type is application/json\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body is a non-empty array\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Each element in the array is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"    responseData.forEach(function(element) {\r",
											"        pm.expect(element).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"countries"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/countries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"countries"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/nova-poshta/regions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has content type 'application/json'\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body is an array\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body array is not empty\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Ответ содержит массив строк с названиями регионов\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    \r",
											"    const data = pm.response.json();\r",
											"    pm.expect(data).to.be.an(\"array\");\r",
											"    pm.expect(data.length).to.be.above(0);\r",
											"    pm.expect(data[0]).to.be.a(\"string\");\r",
											"});\r",
											"\r",
											"const regions = pm.response.json();\r",
											"const randomRegion = regions[Math.floor(Math.random() * regions.length)];\r",
											"\r",
											"pm.environment.set(\"region\", randomRegion);\r",
											"console.log(\"Выбранный регион:\", randomRegion);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/nova-poshta/regions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"nova-poshta",
										"regions"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/nova-poshta/regions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"nova-poshta",
												"regions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/nova-poshta/cities",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Проверка кода ответа\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"// Проверка Content-Type\r",
											"pm.test(\"Content type is application/json\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
											"});\r",
											"\r",
											"// Проверка, что тело — массив\r",
											"const responseData = pm.response.json();\r",
											"pm.test(\"Response is an array\", function () {\r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"});\r",
											"\r",
											"// Проверка наличия параметра region\r",
											"pm.test(\"Region parameter is present in the request URL\", function () {\r",
											"    const regionParam = pm.request.url.query.find(q => q.key === \"region\");\r",
											"    pm.expect(regionParam).to.not.be.undefined;\r",
											"    pm.expect(regionParam.value).to.be.a('string').and.not.empty;\r",
											"});\r",
											"\r",
											"// Информативно: есть ли данные\r",
											"pm.test(\"Response array is not empty\", function () {\r",
											"    if (responseData.length === 0) {\r",
											"        console.warn(\"❗Города не найдены для региона:\", pm.environment.get(\"region\"));\r",
											"    } else {\r",
											"        pm.expect(responseData.length).to.be.above(0);\r",
											"    }\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/nova-poshta/cities?region={{region}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"nova-poshta",
										"cities"
									],
									"query": [
										{
											"key": "region",
											"value": "{{region}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/nova-poshta/cities?region=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"nova-poshta",
												"cities"
											],
											"query": [
												{
													"key": "region",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "auth",
					"item": [
						{
							"name": "register",
							"item": [
								{
									"name": "/api/auth/register/start",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"/* ---------- helpers ---------- */\r",
													"const rand = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\r",
													"\r",
													"/* ---------- e-mail ---------- */\r",
													"const adjectives = ['cool', 'fast', 'sunny', 'clever', 'bright', 'lucky'];\r",
													"const nouns      = ['fox', 'lion', 'panda', 'otter', 'eagle', 'koala'];\r",
													"\r",
													"const emailName = `${adjectives[rand(0, adjectives.length - 1)]}.` +\r",
													"                  `${nouns[rand(0, nouns.length - 1)]}.` +\r",
													"                  pm.variables.replaceIn('{{$timestamp}}');\r",
													"\r",
													"const email = `${emailName}@mail.com`;\r",
													"\r",
													"/* ---------- password ---------- */\r",
													"const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
													"const digits  = '0123456789';\r",
													"\r",
													"let password = '';\r",
													"\r",
													"// Добавляем 10 случайных букв\r",
													"for (let i = 0; i < 10; i++) {\r",
													"  password += letters[rand(0, letters.length - 1)];\r",
													"}\r",
													"\r",
													"// Добавляем хотя бы одну цифру\r",
													"password += digits[rand(0, digits.length - 1)];\r",
													"\r",
													"// Перемешиваем пароль\r",
													"password = password.split('').sort(() => 0.5 - Math.random()).join('');\r",
													"\r",
													"/* ---------- save & log ---------- */\r",
													"// pm.environment.set('email', email);\r",
													"pm.environment.set('email', \"alexseyb64@gmail.com\");\r",
													"pm.environment.set('password', password);\r",
													"\r",
													"console.log({ email, password });  // виден в Postman Console"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Регистрация успешно инициирована\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/auth/register/start",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"register",
												"start"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/register/start",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"register",
														"start"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/auth/register/confirm",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// ==== verification code =========================================\r",
													"pm.environment.set('verificationCode', '123456');   // фиксированный код из test-конфига\r",
													"\r",
													"// ==== deviceId ==================================================\r",
													"// {{$guid}} -> встроенный генератор Postman\r",
													"const deviceId = pm.variables.replaceIn('{{$guid}}');\r",
													"pm.environment.set('deviceId', deviceId);\r",
													"\r",
													"// (необязательно) лог в консоль Postman - удобно дебажить\r",
													"console.log('deviceId for confirm-registration:', deviceId);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Успешное подтверждение регистрации', () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"// Разбираем JSON-ответ\r",
													"const data = pm.response.json();\r",
													"\r",
													"// ▸ Сохраняем токены в окружение\r",
													"pm.environment.set('accessToken',  data.accessToken);\r",
													"pm.environment.set('refreshToken', data.refreshToken);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"{{email}}\",\n  \"code\": \"{{verificationCode}}\",\n  \"deviceId\": \"{{deviceId}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/auth/register/confirm",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"register",
												"confirm"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"code\": \"<string>\",\n  \"deviceId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/register/confirm",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"register",
														"confirm"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/auth/register/admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const rand = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\r",
													"\r",
													"const getRandomChar = (chars) => chars[rand(0, chars.length - 1)];\r",
													"\r",
													"const upper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
													"const lower = 'abcdefghijklmnopqrstuvwxyz';\r",
													"const digits = '0123456789';\r",
													"const all = upper + lower + digits;\r",
													"\r",
													"// Гарантируем хотя бы по одному символу из каждой группы\r",
													"let password = \r",
													"    getRandomChar(upper) + \r",
													"    getRandomChar(lower) + \r",
													"    getRandomChar(digits);\r",
													"\r",
													"// Остальные символы (до 12)\r",
													"for (let i = 3; i < 12; i++) {\r",
													"  password += getRandomChar(all);\r",
													"}\r",
													"\r",
													"// Перемешаем символы\r",
													"password = password.split('').sort(() => 0.5 - Math.random()).join('');\r",
													"\r",
													"// Имя, фамилия, email\r",
													"const firstName = `Admin${rand(100, 999)}`;\r",
													"const lastName = `Test${rand(100, 999)}`;\r",
													"const email = `admin_${pm.variables.replaceIn('{{$timestamp}}')}@mail.com`;\r",
													"const secret = pm.environment.get(\"adminSecret\") || \"REMOVED_ADMIN_SECRET\";\r",
													"\r",
													"// Генерация deviceId\r",
													"const deviceId = crypto.randomUUID();  // встроено в Postman\r",
													"\r",
													"// Сохраняем переменные\r",
													"pm.environment.set(\"adminEmail\", email);\r",
													"pm.environment.set(\"adminPassword\", password);\r",
													"pm.environment.set(\"adminFirstName\", firstName);\r",
													"pm.environment.set(\"adminLastName\", lastName);\r",
													"pm.environment.set(\"adminSecret\", secret);\r",
													"pm.environment.set(\"deviceId3\", deviceId); // 👈 добавляем deviceId3\r",
													"\r",
													"// Лог\r",
													"console.log({ email, password, firstName, lastName, secret, deviceId });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"// Разбираем JSON-ответ\r",
													"const data = pm.response.json();\r",
													"\r",
													"// Сохраняем токен в окружение\r",
													"pm.environment.set('adminAccessToken', data.accessToken);\r",
													"pm.environment.set('adminRefreshToken', data.refreshToken);\r",
													"\r",
													"// Логируем токен\r",
													"console.log(\"Access token:\", data.accessToken);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"{{adminEmail}}\",\n  \"password\": \"{{adminPassword}}\",\n  \"firstName\": \"{{adminFirstName}}\",\n  \"lastName\": \"{{adminLastName}}\",\n  \"secret\": \"{{adminSecret}}\",\n  \"deviceId\": \"{{deviceId}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/auth/register/admin",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"register",
												"admin"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"secret\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/register/admin",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"register",
														"admin"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "/api/auth/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Успешный вход', () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Разбираем JSON-ответ\r",
											"const data = pm.response.json();\r",
											"\r",
											"// ▸ Сохраняем токены в окружение\r",
											"pm.environment.set('accessToken',  data.accessToken);\r",
											"pm.environment.set('refreshToken', data.refreshToken);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\",\n  \"deviceId\": \"{{deviceId}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"deviceId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/auth/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/auth/refresh-token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Успешное получение accessToken', () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Разбираем JSON-ответ\r",
											"const data = pm.response.json();\r",
											"\r",
											"// ▸ Сохраняем токены в окружение\r",
											"pm.environment.set('accessToken',  data.accessToken);\r",
											"pm.environment.set('refreshToken', data.refreshToken);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"refreshToken\": \"{{refreshToken}}\",\n  \"deviceId\": \"{{deviceId}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/refresh-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"refresh-token"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"refreshToken\": \"<string>\",\n  \"deviceId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/auth/refresh-token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"refresh-token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "profile",
					"item": [
						{
							"name": "email-change",
							"item": [
								{
									"name": "/api/profile/email-change/start",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Пример: задать случайный email\r",
													"pm.environment.set(\"email\", `changeduser+${Date.now()}@example.com`);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", () => {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has no content\", () => {\r",
													"    pm.expect(pm.response.text()).to.eql(\"\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"newEmail\": \"{{email}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/profile/email-change/start",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"profile",
												"email-change",
												"start"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"newEmail\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/profile/email-change/start",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"profile",
														"email-change",
														"start"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/profile/email-change/confirm",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Успешное подтверждение почты\", () => {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"{{verificationCode}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/profile/email-change/confirm",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"profile",
												"email-change",
												"confirm"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/profile/email-change/confirm",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"profile",
														"email-change",
														"confirm"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "/api/profile/name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// --- Утилита ---\r",
											"const rand = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\r",
											"\r",
											"// --- Имя и фамилия ---\r",
											"const firstName = `Admin${rand(100, 999)}`;\r",
											"const lastName = `Test${rand(100, 999)}`;\r",
											"\r",
											"pm.environment.set(\"firstName\", firstName);\r",
											"pm.environment.set(\"lastName\", lastName);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"  pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has no content\", function () {\r",
											"  pm.expect(pm.response.text()).to.equal(\"\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"{{firstName}}\",\n  \"lastName\": \"{{lastName}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/profile/name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"profile",
										"name"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/profile/name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"profile",
												"name"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/profile/password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generatePassword(length = 10) {\r",
											"    const upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
											"    const lower = \"abcdefghijklmnopqrstuvwxyz\";\r",
											"    const digits = \"0123456789\";\r",
											"    const specials = \"@#$!\";\r",
											"    const all = upper + lower + digits + specials;\r",
											"\r",
											"    // Гарантируем хотя бы одну цифру\r",
											"    let password = digits.charAt(Math.floor(Math.random() * digits.length));\r",
											"\r",
											"    // Остальные символы случайные\r",
											"    for (let i = 1; i < length; i++) {\r",
											"        password += all.charAt(Math.floor(Math.random() * all.length));\r",
											"    }\r",
											"\r",
											"    // Перемешиваем пароль\r",
											"    password = password.split('').sort(() => 0.5 - Math.random()).join('');\r",
											"    return password;\r",
											"}\r",
											"\r",
											"const newPassword = generatePassword();\r",
											"pm.environment.set(\"newPassword\", newPassword);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has no content\", () => {\r",
											"    pm.expect(pm.response.text()).to.equal(\"\");\r",
											"});\r",
											"\r",
											"// Только если статус 204 — обновляем password\r",
											"if (pm.response.code === 204) {\r",
											"    pm.environment.set(\"password\", pm.environment.get(\"newPassword\"));\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currentPassword\": \"{{password}}\",\n  \"newPassword\": \"{{newPassword}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/profile/password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"profile",
										"password"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currentPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/profile/password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"profile",
												"password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/profile/logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has no content\", () => {\r",
											"    pm.expect(pm.response.text()).to.equal(\"\");\r",
											"});\r",
											"\r",
											"// Очистить токены после выхода\r",
											"if (pm.response.code === 204) {\r",
											"    pm.environment.unset(\"accessToken\");\r",
											"    pm.environment.unset(\"refreshToken\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/profile/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"profile",
										"logout"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/profile/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"profile",
												"logout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Пользователь удалён успешно (204)\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"pm.environment.unset(\"accessToken\");\r",
											"pm.environment.unset(\"refreshToken\");\r",
											"\r",
											"console.log(\"Токены очищены из окружения после удаления аккаунта\");\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"profile"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"profile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "categories",
					"item": [
						{
							"name": "/api/categories",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const timestamp = Date.now();\r",
											"pm.environment.set(\"categoryName\", `\"TestCategory_${timestamp}\"`); \r",
											"\r",
											"pm.environment.set(\"categoryParentId\", `\"11111111-1111-1111-1111-111111111111\"`);\r",
											"// pm.environment.set(\"categoryParentId\", `\"64d59186-54f6-4304-9ce0-86296c927051\"`);\r",
											"// pm.environment.set(\"categoryParentId\", null);\r",
											"const parentId = pm.environment.get(\"categoryParentId\");\r",
											"const isSubcategory = parentId && parentId !== \"null\" && parentId !== \"\";\r",
											"\r",
											"// Общие поля\r",
											"pm.environment.set(\"categoryDescription\", `\"Auto-generated test category at ${timestamp}\"`);\r",
											"pm.environment.set(\"categoryImageUrl\", `\"https://example.com/image_${timestamp}.jpg\"`);\r",
											"pm.environment.set(\"categoryStatus\", 0); // 0 = Active\r",
											"\r",
											"if (isSubcategory) {\r",
											"    // Subcategory\r",
											"    pm.environment.set(\"categoryIconName\", null);\r",
											"    pm.environment.set(\"categoryPropertyKeys\", JSON.stringify([\"Color\", \"Size\", \"Material\"]));\r",
											"} else {\r",
											"    // Main category\r",
											"    pm.environment.set(\"categoryParentId\", null);\r",
											"    pm.environment.set(\"categoryIconName\", `\"icon_${timestamp}\"`);\r",
											"    pm.environment.set(\"categoryPropertyKeys\", \"[]\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Убедимся, что статус 201 Created\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"// Извлекаем ID из тела ответа и сохраняем его\r",
											"const json = pm.response.json();\r",
											"if (json && json.id) {\r",
											"    pm.environment.set(\"categoryId\", json.id);\r",
											"    console.log(\"Saved categoryId:\", json.id);\r",
											"} else {\r",
											"    console.warn(\"ID not found in response\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": {{categoryName}},\n  \"parentId\": {{categoryParentId}},\n  \"description\": {{categoryDescription}},\n  \"imageUrl\": {{categoryImageUrl}},\n  \"iconName\": {{categoryIconName}},\n  \"propertyKeys\": {{categoryPropertyKeys}},\n  \"status\": {{categoryStatus}}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"parentId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"imageUrl\": \"<string>\",\n  \"iconName\": \"<string>\",\n  \"propertyKeys\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"status\": 1\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/categories/:id/exists",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is boolean\", function () {\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(typeof body).to.eql(\"boolean\");\r",
											"});\r",
											"\r",
											"// Сохраняем результат в переменную окружения\r",
											"const exists = pm.response.json();\r",
											"pm.environment.set(\"categoryExists\", exists);\r",
											"console.log(\"Category exists:\", exists);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/categories/:id/exists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories",
										":id",
										"exists"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{categoryId}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/categories/:id/exists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												":id",
												"exists"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<boolean>"
								}
							]
						},
						{
							"name": "/api/categories/:id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const timestamp = Date.now();\r",
											"\r",
											"// Имя категории\r",
											"pm.environment.set(\"categoryName\", `\"UpdatedCategory_${timestamp}\"`);\r",
											"\r",
											"// Получаем сохранённый ID из переменной окружения\r",
											"const categoryId = pm.environment.get(\"categoryId\");\r",
											"\r",
											"// Условие для подкатегории\r",
											"pm.environment.set(\"categoryParentId\", `\"11111111-1111-1111-1111-111111111111\"`); // или null\r",
											"const parentId = pm.environment.get(\"categoryParentId\");\r",
											"const isSubcategory = parentId && parentId !== \"null\" && parentId !== \"\";\r",
											"\r",
											"// Общие поля\r",
											"pm.environment.set(\"categoryDescription\", `\"Updated description ${timestamp}\"`);\r",
											"pm.environment.set(\"categoryImageUrl\", `\"https://example.com/updated_${timestamp}.jpg\"`);\r",
											"pm.environment.set(\"categoryStatus\", 0); // Active\r",
											"\r",
											"if (isSubcategory) {\r",
											"    pm.environment.set(\"categoryIconName\", null);\r",
											"    pm.environment.set(\"categoryPropertyKeys\", JSON.stringify([\"Material\", \"Brand\", \"Color\"]));\r",
											"} else {\r",
											"    pm.environment.set(\"categoryParentId\", null);\r",
											"    pm.environment.set(\"categoryIconName\", `\"updated-icon-${timestamp}\"`);\r",
											"    pm.environment.set(\"categoryPropertyKeys\", \"[]\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const json = pm.response.json();\r",
											"pm.test(\"Response contains updated category ID\", function () {\r",
											"    pm.expect(json).to.have.property(\"id\");\r",
											"    pm.expect(json.id).to.eql(pm.environment.get(\"categoryId\"));\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"{{categoryId}}\",\n  \"name\": {{categoryName}},\n  \"status\": {{categoryStatus}},\n  \"parentId\": {{categoryParentId}},\n  \"description\": {{categoryDescription}},\n  \"imageUrl\": {{categoryImageUrl}},\n  \"iconName\": {{categoryIconName}},\n  \"propertyKeys\": {{categoryPropertyKeys}}\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/categories/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{categoryId}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"status\": 0,\n  \"parentId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"imageUrl\": \"<string>\",\n  \"iconName\": \"<string>\",\n  \"propertyKeys\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/categories/:id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Временно — подставь вручную нужный ID\r",
											"// pm.environment.set(\"categoryId\", \"11111111-1111-1111-1111-111111111111\");\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Проверка, что запрос выполнен успешно\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"// Проверка, что ответ — JSON\r",
											"pm.test(\"Content-Type is application/json\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
											"});\r",
											"\r",
											"// Проверка структуры объекта категории\r",
											"pm.test(\"Response has valid category structure\", function () {\r",
											"    const category = pm.response.json();\r",
											"\r",
											"    pm.expect(category).to.be.an(\"object\");\r",
											"    pm.expect(category).to.have.property(\"id\").that.is.a(\"string\");\r",
											"    pm.expect(category).to.have.property(\"name\").that.is.a(\"string\");\r",
											"    pm.expect(category).to.have.property(\"status\");\r",
											"    pm.expect(category).to.have.property(\"parentId\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/categories/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{categoryId}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/categories",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"  pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required fields - id and name\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"    responseData.forEach(function(category) {\r",
											"        pm.expect(category).to.have.property('id');\r",
											"        pm.expect(category).to.have.property('name');\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"ID is a non-empty string\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.be.an('array');\r",
											"  responseData.forEach(function(category) {\r",
											"    pm.expect(category.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ID should be a non-empty string\");\r",
											"  });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Name is a non-empty string\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  responseData.forEach(function(category) {\r",
											"    pm.expect(category.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");\r",
											"  });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content type is application/json\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"imageUrl\": \"<string>\",\n    \"iconName\": \"<string>\",\n    \"propertyKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"status\": 0\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"imageUrl\": \"<string>\",\n    \"iconName\": \"<string>\",\n    \"propertyKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"status\": 1\n  }\n]"
								}
							]
						},
						{
							"name": "/api/categories/tree",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"  pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content type is application/json\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the structure of the response object\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"    responseData.forEach(function(category){\r",
											"        pm.expect(category).to.be.an('object');\r",
											"        pm.expect(category.id).to.be.a('string');\r",
											"        pm.expect(category.name).to.be.a('string');\r",
											"        pm.expect(category.status).to.exist;\r",
											"        pm.expect(category.children).to.be.an('array');\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Id, name, and status fields are present and non-empty\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"    \r",
											"    responseData.forEach(function(category) {\r",
											"        pm.expect(category.id).to.exist.and.to.have.lengthOf.at.least(1, \"Id should not be empty\");\r",
											"        pm.expect(category.name).to.exist.and.to.have.lengthOf.at.least(1, \"Name should not be empty\");\r",
											"        pm.expect(category.status).to.exist.and.to.have.lengthOf.at.least(1, \"Status should not be empty\");\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Children array is present (any length)\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"    \r",
											"    responseData.forEach(function(item) {\r",
											"        pm.expect(item.children).to.exist.and.to.be.an('array');\r",
											"    });\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/categories/tree",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories",
										"tree"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/categories/tree",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												"tree"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"status\": \"<string>\",\n    \"children\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/CategoryTreeDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/CategoryTreeDto detected>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"status\": \"<string>\",\n    \"children\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/CategoryTreeDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/CategoryTreeDto detected>\"\n      }\n    ]\n  }\n]"
								}
							]
						},
						{
							"name": "/api/categories/delete-many",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const id1 = \"11111111-1111-1111-1111-111111111111\";\r",
											"const id2 = \"22222222-2222-2222-2222-222222222222\";\r",
											"\r",
											"pm.environment.set(\"categoryId1\", id1);\r",
											"pm.environment.set(\"categoryId2\", id2);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has deletedCount and notFoundIds\", function () {\r",
											"    var json = pm.response.json();\r",
											"    pm.expect(json).to.have.property(\"deletedCount\");\r",
											"    pm.expect(json).to.have.property(\"notFoundIds\");\r",
											"    pm.expect(json.notFoundIds).to.be.an(\"array\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\": [\n    \"{{categoryId1}}\",\n    \"{{categoryId2}}\"\n  ]\n}\n",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/categories/delete-many",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories",
										"delete-many"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/categories/delete-many",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												"delete-many"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "products",
					"item": [
						{
							"name": "/api/products",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Code",
											"value": "aliqua enim deserunt",
											"type": "text"
										},
										{
											"key": "Name",
											"value": "voluptate labore anim velit Ut",
											"type": "text"
										},
										{
											"key": "CategoryId",
											"value": "3e9eeb71-a996-ee8a-71f0-dc177a77e770",
											"type": "text"
										},
										{
											"key": "Price",
											"value": "79754064.84870201",
											"type": "text"
										},
										{
											"key": "DiscountPct",
											"value": "88910670.15605548",
											"type": "text"
										},
										{
											"key": "Quantity",
											"value": "-56220770",
											"type": "text"
										},
										{
											"key": "Images",
											"value": "sit aliquip,dolore Lorem",
											"type": "text"
										},
										{
											"key": "Attributes",
											"value": "[object Object],[object Object]",
											"type": "text"
										},
										{
											"key": "Features",
											"value": "[object Object],[object Object]",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Product"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "Code",
													"value": "aliqua enim deserunt",
													"type": "text"
												},
												{
													"key": "Name",
													"value": "voluptate labore anim velit Ut",
													"type": "text"
												},
												{
													"key": "CategoryId",
													"value": "3e9eeb71-a996-ee8a-71f0-dc177a77e770",
													"type": "text"
												},
												{
													"key": "Price",
													"value": "79754064.84870201",
													"type": "text"
												},
												{
													"key": "DiscountPct",
													"value": "88910670.15605548",
													"type": "text"
												},
												{
													"key": "Quantity",
													"value": "-56220770",
													"type": "text"
												},
												{
													"key": "Images",
													"value": "sit aliquip,dolore Lorem",
													"type": "text"
												},
												{
													"key": "Attributes",
													"value": "[object Object],[object Object]",
													"type": "text"
												},
												{
													"key": "Features",
													"value": "[object Object],[object Object]",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/products/:id/exists",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Product/:id/exists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Product",
										":id",
										"exists"
									],
									"variable": [
										{
											"key": "id",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Product/:id/exists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												":id",
												"exists"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/products/:id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"a9df649a-0ddc-9052-5993-524a1461bb46\",\n  \"rowVersion\": \"tempor ut\",\n  \"name\": \"magna\",\n  \"price\": -83529227.61572002,\n  \"quantity\": -94881453,\n  \"categoryId\": \"66d177c2-9f55-429c-eca2-69e93b44e1f7\",\n  \"imageUrls\": [\n    \"consequat enim sit in amet\",\n    \"Ut ut irure\"\n  ],\n  \"attributes\": [\n    {\n      \"key\": \"incididunt sint ut\",\n      \"value\": \"dolore non laborum\"\n    },\n    {\n      \"key\": \"nisi anim officia\",\n      \"value\": \"veniam occaecat in elit\"\n    }\n  ],\n  \"features\": [\n    {\n      \"name\": \"ex\",\n      \"description\": \"sed\"\n    },\n    {\n      \"name\": \"in anim\",\n      \"description\": \"esse nostrud id\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Product",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"a9df649a-0ddc-9052-5993-524a1461bb46\",\n  \"rowVersion\": \"tempor ut\",\n  \"name\": \"magna\",\n  \"price\": -83529227.61572002,\n  \"quantity\": -94881453,\n  \"categoryId\": \"66d177c2-9f55-429c-eca2-69e93b44e1f7\",\n  \"imageUrls\": [\n    \"consequat enim sit in amet\",\n    \"Ut ut irure\"\n  ],\n  \"attributes\": [\n    {\n      \"key\": \"incididunt sint ut\",\n      \"value\": \"dolore non laborum\"\n    },\n    {\n      \"key\": \"nisi anim officia\",\n      \"value\": \"veniam occaecat in elit\"\n    }\n  ],\n  \"features\": [\n    {\n      \"name\": \"ex\",\n      \"description\": \"sed\"\n    },\n    {\n      \"name\": \"in anim\",\n      \"description\": \"esse nostrud id\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/products/:id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Product",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/products",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Product?SearchTerm=labore reprehenderit cillum&CategoryId=df158756-5bfa-966d-037d-d30cf8bda11f&Filters[nostrud__]=esse deserunt elit laboris&MinPrice=5164692.082011387&MaxPrice=5164692.082011387&Parameters.Page=-24164913&Parameters.PageSize=-24164913&Parameters.SortBy=labore reprehenderit cillum&Parameters.SortDesc=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Product"
									],
									"query": [
										{
											"key": "SearchTerm",
											"value": "labore reprehenderit cillum"
										},
										{
											"key": "CategoryId",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f"
										},
										{
											"key": "Filters[nostrud__]",
											"value": "esse deserunt elit laboris"
										},
										{
											"key": "MinPrice",
											"value": "5164692.082011387"
										},
										{
											"key": "MaxPrice",
											"value": "5164692.082011387"
										},
										{
											"key": "Parameters.Page",
											"value": "-24164913"
										},
										{
											"key": "Parameters.PageSize",
											"value": "-24164913"
										},
										{
											"key": "Parameters.SortBy",
											"value": "labore reprehenderit cillum"
										},
										{
											"key": "Parameters.SortDesc",
											"value": "true"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Product?SearchTerm=labore reprehenderit cillum&CategoryId=df158756-5bfa-966d-037d-d30cf8bda11f&Filters[nostrud__]=esse deserunt elit laboris&MinPrice=5164692.082011387&MaxPrice=5164692.082011387&Parameters.Page=-24164913&Parameters.PageSize=-24164913&Parameters.SortBy=labore reprehenderit cillum&Parameters.SortDesc=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product"
											],
											"query": [
												{
													"key": "SearchTerm",
													"value": "labore reprehenderit cillum"
												},
												{
													"key": "CategoryId",
													"value": "df158756-5bfa-966d-037d-d30cf8bda11f"
												},
												{
													"key": "Filters[nostrud__]",
													"value": "esse deserunt elit laboris"
												},
												{
													"key": "MinPrice",
													"value": "5164692.082011387"
												},
												{
													"key": "MaxPrice",
													"value": "5164692.082011387"
												},
												{
													"key": "Parameters.Page",
													"value": "-24164913"
												},
												{
													"key": "Parameters.PageSize",
													"value": "-24164913"
												},
												{
													"key": "Parameters.SortBy",
													"value": "labore reprehenderit cillum"
												},
												{
													"key": "Parameters.SortDesc",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/products/filters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Product/filters?categoryId=df158756-5bfa-966d-037d-d30cf8bda11f",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Product",
										"filters"
									],
									"query": [
										{
											"key": "categoryId",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Product/filters?categoryId=df158756-5bfa-966d-037d-d30cf8bda11f",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												"filters"
											],
											"query": [
												{
													"key": "categoryId",
													"value": "df158756-5bfa-966d-037d-d30cf8bda11f"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/products/delete-many",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\": [\n    \"72355503-2456-a037-4130-05ab2af74fca\",\n    \"3673aa52-8ece-db72-85c7-c51d6c9a3c96\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Product/delete-many",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Product",
										"delete-many"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ids\": [\n    \"72355503-2456-a037-4130-05ab2af74fca\",\n    \"3673aa52-8ece-db72-85c7-c51d6c9a3c96\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Product/delete-many",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Product",
												"delete-many"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "reviews",
					"item": [
						{
							"name": "/api/reviews",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Article",
											"value": "eiusmod incididunt eu commodo",
											"type": "text"
										},
										{
											"key": "Message",
											"value": "Lorem dolore veniam",
											"type": "text"
										},
										{
											"key": "UploadedFiles",
											"value": "nostrud,adipisicing Ut reprehenderit ipsum officia",
											"type": "text"
										},
										{
											"key": "Rating",
											"value": "-70846263",
											"type": "text"
										},
										{
											"key": "ProductId",
											"value": "df12ec61-3b14-97b4-6877-603696fc9bed",
											"type": "text"
										},
										{
											"key": "UserId",
											"value": "1eb4de9a-3fa9-a4ff-fc95-cd04bf0d0806",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "Article",
													"value": "eiusmod incididunt eu commodo",
													"type": "text"
												},
												{
													"key": "Message",
													"value": "Lorem dolore veniam",
													"type": "text"
												},
												{
													"key": "UploadedFiles",
													"value": "nostrud,adipisicing Ut reprehenderit ipsum officia",
													"type": "text"
												},
												{
													"key": "Rating",
													"value": "-70846263",
													"type": "text"
												},
												{
													"key": "ProductId",
													"value": "df12ec61-3b14-97b4-6877-603696fc9bed",
													"type": "text"
												},
												{
													"key": "UserId",
													"value": "1eb4de9a-3fa9-a4ff-fc95-cd04bf0d0806",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/reviews",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"reviews"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/reviews/:id/exists",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id/exists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id",
										"exists"
									],
									"variable": [
										{
											"key": "id",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/reviews/:id/exists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"reviews",
												":id",
												"exists"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/reviews/:id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"ec808de5-1fa2-496b-9247-9d0a8aa20069\",\n  \"article\": \"ullamco in deserunt\",\n  \"message\": \"pariatur consectetur\",\n  \"uploadedFiles\": [\n    \"consectetur nisi mollit anim magna\",\n    \"ut Lorem sed\"\n  ],\n  \"rating\": -54044723\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"ec808de5-1fa2-496b-9247-9d0a8aa20069\",\n  \"article\": \"ullamco in deserunt\",\n  \"message\": \"pariatur consectetur\",\n  \"uploadedFiles\": [\n    \"consectetur nisi mollit anim magna\",\n    \"ut Lorem sed\"\n  ],\n  \"rating\": -54044723\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/reviews/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"reviews",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/reviews/:id/like",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id/like",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id",
										"like"
									],
									"variable": [
										{
											"key": "id",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/reviews/:id/like",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"reviews",
												":id",
												"like"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/reviews/:id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/reviews/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"reviews",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/reviews",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews?ProductId=df158756-5bfa-966d-037d-d30cf8bda11f&MinRating=-24164913&MaxRating=-24164913&Parameters.Page=-24164913&Parameters.PageSize=-24164913&Parameters.SortBy=labore reprehenderit cillum&Parameters.SortDesc=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews"
									],
									"query": [
										{
											"key": "ProductId",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f"
										},
										{
											"key": "MinRating",
											"value": "-24164913"
										},
										{
											"key": "MaxRating",
											"value": "-24164913"
										},
										{
											"key": "Parameters.Page",
											"value": "-24164913"
										},
										{
											"key": "Parameters.PageSize",
											"value": "-24164913"
										},
										{
											"key": "Parameters.SortBy",
											"value": "labore reprehenderit cillum"
										},
										{
											"key": "Parameters.SortDesc",
											"value": "true"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/reviews?ProductId=df158756-5bfa-966d-037d-d30cf8bda11f&MinRating=-24164913&MaxRating=-24164913&Parameters.Page=-24164913&Parameters.PageSize=-24164913&Parameters.SortBy=labore reprehenderit cillum&Parameters.SortDesc=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"reviews"
											],
											"query": [
												{
													"key": "ProductId",
													"value": "df158756-5bfa-966d-037d-d30cf8bda11f"
												},
												{
													"key": "MinRating",
													"value": "-24164913"
												},
												{
													"key": "MaxRating",
													"value": "-24164913"
												},
												{
													"key": "Parameters.Page",
													"value": "-24164913"
												},
												{
													"key": "Parameters.PageSize",
													"value": "-24164913"
												},
												{
													"key": "Parameters.SortBy",
													"value": "labore reprehenderit cillum"
												},
												{
													"key": "Parameters.SortDesc",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/reviews/product/:productId/list",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews/product/:productId/list?page=1&pageSize=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										"product",
										":productId",
										"list"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "20"
										}
									],
									"variable": [
										{
											"key": "productId",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/reviews/product/:productId/list?page=1&pageSize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"reviews",
												"product",
												":productId",
												"list"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "20"
												}
											],
											"variable": [
												{
													"key": "productId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/reviews/product/:productId/rating",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews/product/:productId/rating",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										"product",
										":productId",
										"rating"
									],
									"variable": [
										{
											"key": "productId",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/reviews/product/:productId/rating",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"reviews",
												"product",
												":productId",
												"rating"
											],
											"variable": [
												{
													"key": "productId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/reviews/product/:productId/count",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews/product/:productId/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										"product",
										":productId",
										"count"
									],
									"variable": [
										{
											"key": "productId",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/reviews/product/:productId/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"reviews",
												"product",
												":productId",
												"count"
											],
											"variable": [
												{
													"key": "productId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/reviews/:id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/reviews/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"reviews",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "cart",
					"item": [
						{
							"name": "/api/cart",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productId\": \"urn:uuid:9d1b6f2c-a747-f770-af2b-d3504b23ce94\",\n  \"quantity\": -44671743\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/cart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cart"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"productId\": \"urn:uuid:9d1b6f2c-a747-f770-af2b-d3504b23ce94\",\n  \"quantity\": -44671743\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/cart",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cart"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/cart",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productId\": \"urn:uuid:9d1b6f2c-a747-f770-af2b-d3504b23ce94\",\n  \"quantity\": -44671743\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/cart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cart"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"productId\": \"urn:uuid:9d1b6f2c-a747-f770-af2b-d3504b23ce94\",\n  \"quantity\": -44671743\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/cart",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cart"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/cart",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/cart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cart"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/cart",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cart"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/cart/:productId",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/cart/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cart",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/cart/:productId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cart",
												":productId"
											],
											"variable": [
												{
													"key": "productId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "wishlist",
					"item": [
						{
							"name": "/api/wishlist",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productId\": \"urn:uuid:046cdea7-8465-2187-4251-f9aa4f34a08e\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/wishlist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"wishlist"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"productId\": \"urn:uuid:046cdea7-8465-2187-4251-f9aa4f34a08e\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/wishlist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"wishlist"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/wishlist/toggle",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productId\": \"urn:uuid:046cdea7-8465-2187-4251-f9aa4f34a08e\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/wishlist/toggle",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"wishlist",
										"toggle"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"productId\": \"urn:uuid:046cdea7-8465-2187-4251-f9aa4f34a08e\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/wishlist/toggle",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"wishlist",
												"toggle"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/wishlist",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/wishlist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"wishlist"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/wishlist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"wishlist"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/wishlist/:productId",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/wishlist/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"wishlist",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/wishlist/:productId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"wishlist",
												":productId"
											],
											"variable": [
												{
													"key": "productId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "orders",
					"item": [
						{
							"name": "/api/orders",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"labore dolor\",\n  \"lastName\": \"consequat reprehenderit mollit fugiat\",\n  \"email\": \"aliqua officia pro\",\n  \"country\": \"nulla quis dolore anim aliquip\",\n  \"state\": \"eiusmod\",\n  \"city\": \"aliquip elit\",\n  \"street\": \"minim velit\",\n  \"houseNumber\": \"ut\",\n  \"apartmentNumber\": \"reprehenderit deserunt ullamco tempor officia\",\n  \"postCode\": \"reprehenderit sit tempor Duis\",\n  \"paymentType\": 1,\n  \"cardNumber\": \"proident minim\",\n  \"expirationDate\": \"ea enim aliqua consequat\",\n  \"cvv\": \"anim in nisi ex\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"orders"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"labore dolor\",\n  \"lastName\": \"consequat reprehenderit mollit fugiat\",\n  \"email\": \"aliqua officia pro\",\n  \"country\": \"nulla quis dolore anim aliquip\",\n  \"state\": \"eiusmod\",\n  \"city\": \"aliquip elit\",\n  \"street\": \"minim velit\",\n  \"houseNumber\": \"ut\",\n  \"apartmentNumber\": \"reprehenderit deserunt ullamco tempor officia\",\n  \"postCode\": \"reprehenderit sit tempor Duis\",\n  \"paymentType\": 1,\n  \"cardNumber\": \"proident minim\",\n  \"expirationDate\": \"ea enim aliqua consequat\",\n  \"cvv\": \"anim in nisi ex\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/orders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"orders"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/orders/products",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orderId\": \"c79089b3-533f-9165-6781-140fbc2b7a28\",\n  \"productId\": \"urn:uuid:576a43df-f36b-1aca-71c4-aa39cfa55e5c\",\n  \"quantity\": 38317619\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/orders/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"orders",
										"products"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"orderId\": \"c79089b3-533f-9165-6781-140fbc2b7a28\",\n  \"productId\": \"urn:uuid:576a43df-f36b-1aca-71c4-aa39cfa55e5c\",\n  \"quantity\": 38317619\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/orders/products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"orders",
												"products"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/orders/:id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/orders/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"orders",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/orders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/orders/:orderId/products/:productId",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/orders/:orderId/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"orders",
										":orderId",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "orderId",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
											"description": "(Required) "
										},
										{
											"key": "productId",
											"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/orders/:orderId/products/:productId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"orders",
												":orderId",
												"products",
												":productId"
											],
											"variable": [
												{
													"key": "orderId"
												},
												{
													"key": "productId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/orders",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"orders"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/orders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"orders"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "admin",
					"item": [
						{
							"name": "users",
							"item": [
								{
									"name": "/api/admin/users",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/users?Search=labore reprehenderit cillum&Role=labore reprehenderit cillum&Status=labore reprehenderit cillum&Parameters.Page=-24164913&Parameters.PageSize=-24164913&Parameters.SortBy=labore reprehenderit cillum&Parameters.SortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"users"
											],
											"query": [
												{
													"key": "Search",
													"value": "labore reprehenderit cillum"
												},
												{
													"key": "Role",
													"value": "labore reprehenderit cillum"
												},
												{
													"key": "Status",
													"value": "labore reprehenderit cillum"
												},
												{
													"key": "Parameters.Page",
													"value": "-24164913"
												},
												{
													"key": "Parameters.PageSize",
													"value": "-24164913"
												},
												{
													"key": "Parameters.SortBy",
													"value": "labore reprehenderit cillum"
												},
												{
													"key": "Parameters.SortDesc",
													"value": "false"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/users?Search=labore reprehenderit cillum&Role=labore reprehenderit cillum&Status=labore reprehenderit cillum&Parameters.Page=-24164913&Parameters.PageSize=-24164913&Parameters.SortBy=labore reprehenderit cillum&Parameters.SortDesc=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"users"
													],
													"query": [
														{
															"key": "Search",
															"value": "labore reprehenderit cillum"
														},
														{
															"key": "Role",
															"value": "labore reprehenderit cillum"
														},
														{
															"key": "Status",
															"value": "labore reprehenderit cillum"
														},
														{
															"key": "Parameters.Page",
															"value": "-24164913"
														},
														{
															"key": "Parameters.PageSize",
															"value": "-24164913"
														},
														{
															"key": "Parameters.SortBy",
															"value": "labore reprehenderit cillum"
														},
														{
															"key": "Parameters.SortDesc",
															"value": "false"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/admin/users/:userId/role/promote",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/users/:userId/role/promote",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"users",
												":userId",
												"role",
												"promote"
											],
											"variable": [
												{
													"key": "userId",
													"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/users/:userId/role/promote",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"users",
														":userId",
														"role",
														"promote"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/admin/users/:userId/role/demote",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/users/:userId/role/demote",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"users",
												":userId",
												"role",
												"demote"
											],
											"variable": [
												{
													"key": "userId",
													"value": "df158756-5bfa-966d-037d-d30cf8bda11f",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/users/:userId/role/demote",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"users",
														":userId",
														"role",
														"demote"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/admin/users/delete-many",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userIds\": [\n    \"ee6b9695-c01c-8841-7120-75946269e3f2\",\n    \"b0c24e62-8513-4ec9-2579-1cc634f1a9e3\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/users/delete-many",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"users",
												"delete-many"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userIds\": [\n    \"ee6b9695-c01c-8841-7120-75946269e3f2\",\n    \"b0c24e62-8513-4ec9-2579-1cc634f1a9e3\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/admin/users/delete-many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"users",
														"delete-many"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/admin/users/restore-many",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userIds\": [\n    \"ee6b9695-c01c-8841-7120-75946269e3f2\",\n    \"b0c24e62-8513-4ec9-2579-1cc634f1a9e3\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/users/restore-many",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"users",
												"restore-many"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userIds\": [\n    \"ee6b9695-c01c-8841-7120-75946269e3f2\",\n    \"b0c24e62-8513-4ec9-2579-1cc634f1a9e3\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/admin/users/restore-many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"users",
														"restore-many"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "/"
		}
	]
}