{
	"info": {
		"_postman_id": "e3d2547b-303c-4df9-8d56-1064904b8ec0",
		"name": "AmazonKiller API v2(renamed)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44878651",
		"_collection_link": "https://oleksiibabchynskyi.postman.co/workspace/Oleksii-Babchynskyi's-Workspace~e1274361-8aee-4fe3-89e4-e315a3e041be/collection/44878651-e3d2547b-303c-4df9-8d56-1064904b8ec0?action=share&source=collection_link&creator=44878651"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "admin",
					"item": [
						{
							"name": "users",
							"item": [
								{
									"name": "{userId}",
									"item": [
										{
											"name": "role",
											"item": [
												{
													"name": "promote",
													"item": [
														{
															"name": "/api/admin/users/:userId/role/promote",
															"request": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/admin/users/:userId/role/promote",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"admin",
																		"users",
																		":userId",
																		"role",
																		"promote"
																	],
																	"variable": [
																		{
																			"key": "userId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/admin/users/:userId/role/promote",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"admin",
																				"users",
																				":userId",
																				"role",
																				"promote"
																			],
																			"variable": [
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "demote",
													"item": [
														{
															"name": "/api/admin/users/:userId/role/demote",
															"request": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/admin/users/:userId/role/demote",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"admin",
																		"users",
																		":userId",
																		"role",
																		"demote"
																	],
																	"variable": [
																		{
																			"key": "userId",
																			"value": "<uuid>",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/admin/users/:userId/role/demote",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"admin",
																				"users",
																				":userId",
																				"role",
																				"demote"
																			],
																			"variable": [
																				{
																					"key": "userId"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "orders",
											"item": [
												{
													"name": "/api/admin/users/:userId/orders",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/admin/users/:userId/orders",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"admin",
																"users",
																":userId",
																"orders"
															],
															"variable": [
																{
																	"key": "userId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/admin/users/:userId/orders",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"admin",
																		"users",
																		":userId",
																		"orders"
																	],
																	"variable": [
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "reviews",
											"item": [
												{
													"name": "/api/admin/users/:userId/reviews",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/admin/users/:userId/reviews",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"admin",
																"users",
																":userId",
																"reviews"
															],
															"variable": [
																{
																	"key": "userId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/admin/users/:userId/reviews",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"admin",
																		"users",
																		":userId",
																		"reviews"
																	],
																	"variable": [
																		{
																			"key": "userId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "delete-many",
									"item": [
										{
											"name": "/api/admin/users/delete-many",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/admin/users/delete-many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"users",
														"delete-many"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"userIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/admin/users/delete-many",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"admin",
																"users",
																"delete-many"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "restore-many",
									"item": [
										{
											"name": "/api/admin/users/restore-many",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/admin/users/restore-many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"users",
														"restore-many"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"userIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/admin/users/restore-many",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"admin",
																"users",
																"restore-many"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/api/admin/users",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/users?Search=<string>&Role=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"users"
											],
											"query": [
												{
													"key": "Search",
													"value": "<string>"
												},
												{
													"key": "Role",
													"value": "<string>"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/users?Search=<string>&Role=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"users"
													],
													"query": [
														{
															"key": "Search",
															"value": "<string>"
														},
														{
															"key": "Role",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "auth",
					"item": [
						{
							"name": "register",
							"item": [
								{
									"name": "start",
									"item": [
										{
											"name": "/api/auth/register/start",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"/* ---------- helpers ---------- */\r",
															"const rand = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"\r",
															"/* ---------- e-mail ---------- */\r",
															"const adjectives = ['cool','fast','sunny','clever','bright','lucky'];\r",
															"const nouns      = ['fox','lion','panda','otter','eagle','koala'];\r",
															"\r",
															"const emailName = `${adjectives[rand(0, adjectives.length - 1)]}.` +\r",
															"                  `${nouns[rand(0, nouns.length - 1)]}.` +\r",
															"                  pm.variables.replaceIn('{{$timestamp}}');\r",
															"\r",
															"const email = `${emailName}@mail.com`;\r",
															"\r",
															"/* ---------- password ---------- */\r",
															"const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
															"let password   = '';\r",
															"for (let i = 0; i < 12; i++) {\r",
															"  password += alphabet[rand(0, alphabet.length - 1)];\r",
															"}\r",
															"\r",
															"/* ---------- save & log ---------- */\r",
															"pm.environment.set('email',     email);\r",
															"pm.environment.set('password',  password);\r",
															"\r",
															"console.log({ email, password });   // видно в «Console» снизу\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Регистрация успешно инициирована\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/register/start",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"register",
														"start"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/auth/register/start",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"auth",
																"register",
																"start"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "confirm",
									"item": [
										{
											"name": "/api/auth/register/confirm",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// ==== verification code =========================================\r",
															"pm.environment.set('verificationCode', '123456');   // фиксированный код из test-конфига\r",
															"\r",
															"// ==== deviceId ==================================================\r",
															"// {{$guid}} -> встроенный генератор Postman\r",
															"const deviceId = pm.variables.replaceIn('{{$guid}}');\r",
															"pm.environment.set('deviceId', deviceId);\r",
															"\r",
															"// (необязательно) лог в консоль Postman - удобно дебажить\r",
															"console.log('deviceId for confirm-registration:', deviceId);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Успешное подтверждение регистрации', () => {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"// Разбираем JSON-ответ\r",
															"const data = pm.response.json();\r",
															"\r",
															"// ▸ Сохраняем токены в окружение\r",
															"pm.environment.set('accessToken',  data.accessToken);\r",
															"pm.environment.set('refreshToken', data.refreshToken);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"{{email}}\",\n  \"code\": \"{{verificationCode}}\",\n  \"deviceId\": \"{{deviceId}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/register/confirm",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"register",
														"confirm"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\",\n  \"code\": \"<string>\",\n  \"deviceId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/auth/register/confirm",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"auth",
																"register",
																"confirm"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "admin",
									"item": [
										{
											"name": "/api/auth/register/admin",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// --- Утилита ---\r",
															"const rand = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\r",
															"\r",
															"// --- Имя и фамилия ---\r",
															"const firstName = `Admin${rand(100, 999)}`;\r",
															"const lastName = `Test${rand(100, 999)}`;\r",
															"\r",
															"// --- Email ---\r",
															"const email = `admin_${pm.variables.replaceIn('{{$timestamp}}')}@mail.com`;\r",
															"\r",
															"// --- Пароль ---\r",
															"const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
															"let password = '';\r",
															"for (let i = 0; i < 12; i++) {\r",
															"  password += alphabet[rand(0, alphabet.length - 1)];\r",
															"}\r",
															"\r",
															"// --- Секрет ---\r",
															"const secret = pm.environment.get(\"adminSecret\") || \"REMOVED_ADMIN_SECRET\";\r",
															"\r",
															"// --- Сохраняем переменные ---\r",
															"pm.environment.set(\"adminEmail\", email);\r",
															"pm.environment.set(\"adminPassword\", password);\r",
															"pm.environment.set(\"adminFirstName\", firstName);\r",
															"pm.environment.set(\"adminLastName\", lastName);\r",
															"pm.environment.set(\"adminSecret\", secret);\r",
															"\r",
															"// --- Лог ---\r",
															"console.log({ email, password, firstName, lastName, secret });\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"// Ответ как plain text, сохраняем как есть\r",
															"const token = pm.response.text();\r",
															"pm.environment.set(\"adminAccessToken\", token);\r",
															"\r",
															"console.log(\"Access token:\", token);\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"{{adminEmail}}\",\n  \"password\": \"{{adminPassword}}\",\n  \"firstName\": \"{{adminFirstName}}\",\n  \"lastName\": \"{{adminLastName}}\",\n  \"secret\": \"{{adminSecret}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/register/admin",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"register",
														"admin"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"secret\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/auth/register/admin",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"auth",
																"register",
																"admin"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "login",
							"item": [
								{
									"name": "/api/auth/login",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Успешный вход', () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"// Разбираем JSON-ответ\r",
													"const data = pm.response.json();\r",
													"\r",
													"// ▸ Сохраняем токены в окружение\r",
													"pm.environment.set('accessToken',  data.accessToken);\r",
													"pm.environment.set('refreshToken', data.refreshToken);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\",\n  \"deviceId\": \"{{deviceId}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/auth/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"login"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"deviceId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "refresh-token",
							"item": [
								{
									"name": "/api/auth/refresh-token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Успешное получение accessToken', () => {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"// Разбираем JSON-ответ\r",
													"const data = pm.response.json();\r",
													"\r",
													"// ▸ Сохраняем токены в окружение\r",
													"pm.environment.set('accessToken',  data.accessToken);\r",
													"pm.environment.set('refreshToken', data.refreshToken);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"refreshToken\": \"{{refreshToken}}\",\n  \"deviceId\": \"{{deviceId}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/auth/refresh-token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"refresh-token"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"refreshToken\": \"<string>\",\n  \"deviceId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/auth/refresh-token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"auth",
														"refresh-token"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "cart",
					"item": [
						{
							"name": "{productId}",
							"item": [
								{
									"name": "/api/cart/:productId",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/cart/:productId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cart",
												":productId"
											],
											"variable": [
												{
													"key": "productId",
													"value": "<uuid>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/cart/:productId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"cart",
														":productId"
													],
													"variable": [
														{
															"key": "productId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "/api/cart",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/cart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cart"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/cart",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cart"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/cart",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productId\": \"<uuid>\",\n  \"quantity\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/cart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cart"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"productId\": \"<uuid>\",\n  \"quantity\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/cart",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cart"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/cart",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productId\": \"<uuid>\",\n  \"quantity\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/cart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cart"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"productId\": \"<uuid>\",\n  \"quantity\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/cart",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cart"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "categories",
					"item": [
						{
							"name": "tree",
							"item": [
								{
									"name": "/api/categories/tree",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 200\", function () {\r",
													"  pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Content type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Validate the structure of the response object\", function () {\r",
													"    const responseData = pm.response.json();\r",
													"    \r",
													"    pm.expect(responseData).to.be.an('array');\r",
													"    responseData.forEach(function(category){\r",
													"        pm.expect(category).to.be.an('object');\r",
													"        pm.expect(category.id).to.be.a('string');\r",
													"        pm.expect(category.name).to.be.a('string');\r",
													"        pm.expect(category.status).to.exist;\r",
													"        pm.expect(category.children).to.be.an('array');\r",
													"    });\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Id, name, and status fields are present and non-empty\", function () {\r",
													"    const responseData = pm.response.json();\r",
													"    \r",
													"    pm.expect(responseData).to.be.an('array');\r",
													"    \r",
													"    responseData.forEach(function(category) {\r",
													"        pm.expect(category.id).to.exist.and.to.have.lengthOf.at.least(1, \"Id should not be empty\");\r",
													"        pm.expect(category.name).to.exist.and.to.have.lengthOf.at.least(1, \"Name should not be empty\");\r",
													"        pm.expect(category.status).to.exist.and.to.have.lengthOf.at.least(1, \"Status should not be empty\");\r",
													"    });\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Children array is present (any length)\", function () {\r",
													"    const responseData = pm.response.json();\r",
													"    \r",
													"    pm.expect(responseData).to.be.an('array');\r",
													"    \r",
													"    responseData.forEach(function(item) {\r",
													"        pm.expect(item.children).to.exist.and.to.be.an('array');\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/categories/tree",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												"tree"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/categories/tree",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														"tree"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"status\": \"<string>\",\n    \"children\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/CategoryTreeDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/CategoryTreeDto detected>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"status\": \"<string>\",\n    \"children\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/CategoryTreeDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/CategoryTreeDto detected>\"\n      }\n    ]\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "exists",
									"item": [
										{
											"name": "/api/categories/:id/exists",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id/exists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id",
														"exists"
													],
													"variable": [
														{
															"key": "id",
															"value": "{{categoryId}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/categories/:id/exists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"categories",
																":id",
																"exists"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "<boolean>"
												}
											]
										}
									]
								},
								{
									"name": "/api/categories/:id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Временно — подставь вручную нужный ID\r",
													"pm.environment.set(\"categoryId\", \"11111111-1111-1111-1111-111111111111\");\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Проверка, что запрос выполнен успешно\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"// Проверка, что ответ — JSON\r",
													"pm.test(\"Content-Type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
													"});\r",
													"\r",
													"// Проверка структуры объекта категории\r",
													"pm.test(\"Response has valid category structure\", function () {\r",
													"    const category = pm.response.json();\r",
													"\r",
													"    pm.expect(category).to.be.an(\"object\");\r",
													"    pm.expect(category).to.have.property(\"id\").that.is.a(\"string\");\r",
													"    pm.expect(category).to.have.property(\"name\").that.is.a(\"string\");\r",
													"    pm.expect(category).to.have.property(\"status\");\r",
													"    pm.expect(category).to.have.property(\"parentId\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{categoryId}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/categories/:id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const timestamp = Date.now();\r",
													"\r",
													"// Имя категории\r",
													"pm.environment.set(\"categoryName\", `\"UpdatedCategory_${timestamp}\"`);\r",
													"\r",
													"// Получаем сохранённый ID из переменной окружения\r",
													"const categoryId = pm.environment.get(\"categoryId\");\r",
													"\r",
													"// Условие для подкатегории\r",
													"pm.environment.set(\"categoryParentId\", `\"11111111-1111-1111-1111-111111111111\"`); // или null\r",
													"const parentId = pm.environment.get(\"categoryParentId\");\r",
													"const isSubcategory = parentId && parentId !== \"null\" && parentId !== \"\";\r",
													"\r",
													"// Общие поля\r",
													"pm.environment.set(\"categoryDescription\", `\"Updated description ${timestamp}\"`);\r",
													"pm.environment.set(\"categoryImageUrl\", `\"https://example.com/updated_${timestamp}.jpg\"`);\r",
													"pm.environment.set(\"categoryStatus\", 0); // Active\r",
													"\r",
													"if (isSubcategory) {\r",
													"    pm.environment.set(\"categoryIconName\", null);\r",
													"    pm.environment.set(\"categoryPropertyKeys\", JSON.stringify([\"Material\", \"Brand\", \"Color\"]));\r",
													"} else {\r",
													"    pm.environment.set(\"categoryParentId\", null);\r",
													"    pm.environment.set(\"categoryIconName\", `\"updated-icon-${timestamp}\"`);\r",
													"    pm.environment.set(\"categoryPropertyKeys\", \"[]\");\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"const json = pm.response.json();\r",
													"pm.test(\"Response contains updated category ID\", function () {\r",
													"    pm.expect(json).to.have.property(\"id\");\r",
													"    pm.expect(json.id).to.eql(pm.environment.get(\"categoryId\"));\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{adminAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"{{categoryId}}\",\n  \"name\": {{categoryName}},\n  \"status\": {{categoryStatus}},\n  \"parentId\": {{categoryParentId}},\n  \"description\": {{categoryDescription}},\n  \"imageUrl\": {{categoryImageUrl}},\n  \"iconName\": {{categoryIconName}},\n  \"propertyKeys\": {{categoryPropertyKeys}}\n}\n",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{categoryId}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"status\": 0,\n  \"parentId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"imageUrl\": \"<string>\",\n  \"iconName\": \"<string>\",\n  \"propertyKeys\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/categories/:id",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "delete-many",
							"item": [
								{
									"name": "/api/categories/delete-many",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/categories/delete-many",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												"delete-many"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/categories/delete-many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														"delete-many"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "/api/categories",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"  pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required fields - id and name\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"    responseData.forEach(function(category) {\r",
											"        pm.expect(category).to.have.property('id');\r",
											"        pm.expect(category).to.have.property('name');\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"ID is a non-empty string\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.be.an('array');\r",
											"  responseData.forEach(function(category) {\r",
											"    pm.expect(category.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ID should be a non-empty string\");\r",
											"  });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Name is a non-empty string\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  responseData.forEach(function(category) {\r",
											"    pm.expect(category.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");\r",
											"  });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content type is application/json\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"imageUrl\": \"<string>\",\n    \"iconName\": \"<string>\",\n    \"propertyKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"status\": 0\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"imageUrl\": \"<string>\",\n    \"iconName\": \"<string>\",\n    \"propertyKeys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"status\": 1\n  }\n]"
								}
							]
						},
						{
							"name": "/api/categories",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const timestamp = Date.now();\r",
											"pm.environment.set(\"categoryName\", `\"TestCategory_${timestamp}\"`); \r",
											"\r",
											"pm.environment.set(\"categoryParentId\", `\"11111111-1111-1111-1111-111111111111\"`);\r",
											"const parentId = pm.environment.get(\"categoryParentId\");\r",
											"const isSubcategory = parentId && parentId !== \"null\" && parentId !== \"\";\r",
											"\r",
											"// Общие поля\r",
											"pm.environment.set(\"categoryDescription\", `\"Auto-generated test category at ${timestamp}\"`);\r",
											"pm.environment.set(\"categoryImageUrl\", `\"https://example.com/image_${timestamp}.jpg\"`);\r",
											"pm.environment.set(\"categoryStatus\", 0); // 0 = Active\r",
											"\r",
											"if (isSubcategory) {\r",
											"    // Subcategory\r",
											"    pm.environment.set(\"categoryIconName\", null);\r",
											"    pm.environment.set(\"categoryPropertyKeys\", JSON.stringify([\"Color\", \"Size\", \"Material\"]));\r",
											"} else {\r",
											"    // Main category\r",
											"    pm.environment.set(\"categoryParentId\", null);\r",
											"    pm.environment.set(\"categoryIconName\", `\"icon_${timestamp}\"`);\r",
											"    pm.environment.set(\"categoryPropertyKeys\", \"[]\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Убедимся, что статус 201 Created\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"// Извлекаем ID из тела ответа и сохраняем его\r",
											"const json = pm.response.json();\r",
											"if (json && json.id) {\r",
											"    pm.environment.set(\"categoryId\", json.id);\r",
											"    console.log(\"Saved categoryId:\", json.id);\r",
											"} else {\r",
											"    console.warn(\"ID not found in response\");\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": {{categoryName}},\n  \"parentId\": {{categoryParentId}},\n  \"description\": {{categoryDescription}},\n  \"imageUrl\": {{categoryImageUrl}},\n  \"iconName\": {{categoryIconName}},\n  \"propertyKeys\": {{categoryPropertyKeys}},\n  \"status\": {{categoryStatus}}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"parentId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"imageUrl\": \"<string>\",\n  \"iconName\": \"<string>\",\n  \"propertyKeys\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"status\": 1\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "countries",
					"item": [
						{
							"name": "/api/countries",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response Content-Type is application/json\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body is a non-empty array\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Each element in the array is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('array');\r",
											"    responseData.forEach(function(element) {\r",
											"        pm.expect(element).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"countries"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/countries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"countries"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "nova-poshta",
					"item": [
						{
							"name": "regions",
							"item": [
								{
									"name": "/api/nova-poshta/regions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Response has content type 'application/json'\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Response body is an array\", function () {\r",
													"    const responseData = pm.response.json();\r",
													"    \r",
													"    pm.expect(responseData).to.be.an('array');\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Response body array is not empty\", function () {\r",
													"    const responseData = pm.response.json();\r",
													"    \r",
													"    pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Ответ содержит массив строк с названиями регионов\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"    const data = pm.response.json();\r",
													"    pm.expect(data).to.be.an(\"array\");\r",
													"    pm.expect(data.length).to.be.above(0);\r",
													"    pm.expect(data[0]).to.be.a(\"string\");\r",
													"});\r",
													"\r",
													"const regions = pm.response.json();\r",
													"const randomRegion = regions[Math.floor(Math.random() * regions.length)];\r",
													"\r",
													"pm.environment.set(\"region\", randomRegion);\r",
													"console.log(\"Выбранный регион:\", randomRegion);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/nova-poshta/regions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"nova-poshta",
												"regions"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/nova-poshta/regions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"nova-poshta",
														"regions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "cities",
							"item": [
								{
									"name": "/api/nova-poshta/cities",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Проверка кода ответа\r",
													"pm.test(\"Response status code is 200\", function () {\r",
													"    pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"// Проверка Content-Type\r",
													"pm.test(\"Content type is application/json\", function () {\r",
													"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
													"});\r",
													"\r",
													"// Проверка, что тело — массив\r",
													"const responseData = pm.response.json();\r",
													"pm.test(\"Response is an array\", function () {\r",
													"    pm.expect(responseData).to.be.an('array');\r",
													"});\r",
													"\r",
													"// Проверка наличия параметра region\r",
													"pm.test(\"Region parameter is present in the request URL\", function () {\r",
													"    const regionParam = pm.request.url.query.find(q => q.key === \"region\");\r",
													"    pm.expect(regionParam).to.not.be.undefined;\r",
													"    pm.expect(regionParam.value).to.be.a('string').and.not.empty;\r",
													"});\r",
													"\r",
													"// Информативно: есть ли данные\r",
													"pm.test(\"Response array is not empty\", function () {\r",
													"    if (responseData.length === 0) {\r",
													"        console.warn(\"❗Города не найдены для региона:\", pm.environment.get(\"region\"));\r",
													"    } else {\r",
													"        pm.expect(responseData.length).to.be.above(0);\r",
													"    }\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/nova-poshta/cities?region={{region}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"nova-poshta",
												"cities"
											],
											"query": [
												{
													"key": "region",
													"value": "{{region}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/nova-poshta/cities?region=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"nova-poshta",
														"cities"
													],
													"query": [
														{
															"key": "region",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "orders",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "/api/orders/:id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/orders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"orders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/orders/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"orders",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{orderId}",
							"item": [
								{
									"name": "products",
									"item": [
										{
											"name": "{productId}",
											"item": [
												{
													"name": "/api/orders/:orderId/products/:productId",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/orders/:orderId/products/:productId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"orders",
																":orderId",
																"products",
																":productId"
															],
															"variable": [
																{
																	"key": "orderId",
																	"value": "<uuid>",
																	"description": "(Required) "
																},
																{
																	"key": "productId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/orders/:orderId/products/:productId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"orders",
																		":orderId",
																		"products",
																		":productId"
																	],
																	"variable": [
																		{
																			"key": "orderId"
																		},
																		{
																			"key": "productId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "/api/orders/:orderId/products",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"orderId\": \"<uuid>\",\n  \"productId\": \"<uuid>\",\n  \"quantity\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/orders/:orderId/products",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"orders",
														":orderId",
														"products"
													],
													"variable": [
														{
															"key": "orderId",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"orderId\": \"<uuid>\",\n  \"productId\": \"<uuid>\",\n  \"quantity\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/orders/:orderId/products",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"orders",
																":orderId",
																"products"
															],
															"variable": [
																{
																	"key": "orderId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "/api/orders",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"orders"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/orders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"orders"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/orders",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"country\": \"<string>\",\n  \"state\": \"<string>\",\n  \"city\": \"<string>\",\n  \"street\": \"<string>\",\n  \"houseNumber\": \"<string>\",\n  \"apartmentNumber\": \"<string>\",\n  \"postCode\": \"<string>\",\n  \"paymentType\": 1,\n  \"cardNumber\": \"<string>\",\n  \"expirationDate\": \"<string>\",\n  \"cvv\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"orders"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"country\": \"<string>\",\n  \"state\": \"<string>\",\n  \"city\": \"<string>\",\n  \"street\": \"<string>\",\n  \"houseNumber\": \"<string>\",\n  \"apartmentNumber\": \"<string>\",\n  \"postCode\": \"<string>\",\n  \"paymentType\": 1,\n  \"cardNumber\": \"<string>\",\n  \"expirationDate\": \"<string>\",\n  \"cvv\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/orders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"orders"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "products",
					"item": [
						{
							"name": "search",
							"item": [
								{
									"name": "/api/products/search",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/products/search?SearchTerm=<string>&CategoryId=<uuid>&MinPrice=<double>&MaxPrice=<double>&SortBy=<string>&SortDesc=<boolean>&Page=<integer>&PageSize=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"products",
												"search"
											],
											"query": [
												{
													"key": "SearchTerm",
													"value": "<string>"
												},
												{
													"key": "CategoryId",
													"value": "<uuid>"
												},
												{
													"key": "MinPrice",
													"value": "<double>"
												},
												{
													"key": "MaxPrice",
													"value": "<double>"
												},
												{
													"key": "SortBy",
													"value": "<string>"
												},
												{
													"key": "SortDesc",
													"value": "<boolean>"
												},
												{
													"key": "Page",
													"value": "<integer>"
												},
												{
													"key": "PageSize",
													"value": "<integer>"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/products/search?SearchTerm=<string>&CategoryId=<uuid>&MinPrice=<double>&MaxPrice=<double>&SortBy=<string>&SortDesc=<boolean>&Page=<integer>&PageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"search"
													],
													"query": [
														{
															"key": "SearchTerm",
															"value": "<string>"
														},
														{
															"key": "CategoryId",
															"value": "<uuid>"
														},
														{
															"key": "MinPrice",
															"value": "<double>"
														},
														{
															"key": "MaxPrice",
															"value": "<double>"
														},
														{
															"key": "SortBy",
															"value": "<string>"
														},
														{
															"key": "SortDesc",
															"value": "<boolean>"
														},
														{
															"key": "Page",
															"value": "<integer>"
														},
														{
															"key": "PageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "exists",
									"item": [
										{
											"name": "/api/products/:id/exists",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/products/:id/exists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														":id",
														"exists"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/products/:id/exists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"products",
																":id",
																"exists"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/api/products/:id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/products/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/products/:id",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"rowVersion\": \"<string>\",\n  \"name\": \"<string>\",\n  \"price\": \"<double>\",\n  \"quantity\": \"<integer>\",\n  \"categoryId\": \"<uuid>\",\n  \"imageUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"attributes\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<uuid>\",\n  \"rowVersion\": \"<string>\",\n  \"name\": \"<string>\",\n  \"price\": \"<double>\",\n  \"quantity\": \"<integer>\",\n  \"categoryId\": \"<uuid>\",\n  \"imageUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"attributes\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"features\": [\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/products/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/products/:id",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/products/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "delete-many",
							"item": [
								{
									"name": "/api/products/delete-many",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/products/delete-many",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"products",
												"delete-many"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/products/delete-many",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"products",
														"delete-many"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "/api/products",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CategoryId",
											"value": "<uuid>",
											"description": "(Required) ",
											"type": "text"
										},
										{
											"key": "DetailsId",
											"value": "<uuid>",
											"description": "(Required) ",
											"type": "text"
										},
										{
											"key": "Name",
											"value": "<string>",
											"description": "(Required) ",
											"type": "text"
										},
										{
											"key": "Price",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "Quantity",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "Discount",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "Images",
											"value": "<binary>,<binary>",
											"type": "text"
										},
										{
											"key": "Attributes",
											"value": "[object Object],[object Object]",
											"type": "text"
										},
										{
											"key": "Features",
											"value": "[object Object],[object Object]",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "CategoryId",
													"value": "<uuid>",
													"description": "(Required) ",
													"type": "text"
												},
												{
													"key": "DetailsId",
													"value": "<uuid>",
													"description": "(Required) ",
													"type": "text"
												},
												{
													"key": "Name",
													"value": "<string>",
													"description": "(Required) ",
													"type": "text"
												},
												{
													"key": "Price",
													"value": "<double>",
													"type": "text"
												},
												{
													"key": "Quantity",
													"value": "<integer>",
													"type": "text"
												},
												{
													"key": "Discount",
													"value": "<double>",
													"type": "text"
												},
												{
													"key": "Images",
													"value": "<binary>,<binary>",
													"type": "text"
												},
												{
													"key": "Attributes",
													"value": "[object Object],[object Object]",
													"type": "text"
												},
												{
													"key": "Features",
													"value": "[object Object],[object Object]",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"products"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "profile",
					"item": [
						{
							"name": "email-change",
							"item": [
								{
									"name": "start",
									"item": [
										{
											"name": "/api/profile/email-change/start",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Пример: задать случайный email\r",
															"pm.environment.set(\"email\", `changeduser+${Date.now()}@example.com`);\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", () => {\r",
															"    pm.response.to.have.status(204);\r",
															"});\r",
															"\r",
															"pm.test(\"Response has no content\", () => {\r",
															"    pm.expect(pm.response.text()).to.eql(\"\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{accessToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"newEmail\": \"{{email}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/profile/email-change/start",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"profile",
														"email-change",
														"start"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"newEmail\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/profile/email-change/start",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"profile",
																"email-change",
																"start"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "confirm",
									"item": [
										{
											"name": "/api/profile/email-change/confirm",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Успешное подтверждение почты\", () => {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{accessToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"{{verificationCode}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/profile/email-change/confirm",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"profile",
														"email-change",
														"confirm"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"code\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/profile/email-change/confirm",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"profile",
																"email-change",
																"confirm"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "name",
							"item": [
								{
									"name": "/api/profile/name",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// --- Утилита ---\r",
													"const rand = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\r",
													"\r",
													"// --- Имя и фамилия ---\r",
													"const firstName = `Admin${rand(100, 999)}`;\r",
													"const lastName = `Test${rand(100, 999)}`;\r",
													"\r",
													"pm.environment.set(\"firstName\", firstName);\r",
													"pm.environment.set(\"lastName\", lastName);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"  pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has no content\", function () {\r",
													"  pm.expect(pm.response.text()).to.equal(\"\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"{{firstName}}\",\n  \"lastName\": \"{{lastName}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/profile/name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"profile",
												"name"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/profile/name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"profile",
														"name"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "password",
							"item": [
								{
									"name": "/api/profile/password",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Генерация случайного пароля длиной 10 символов\r",
													"function generatePassword(length = 10) {\r",
													"    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$!\";\r",
													"    let password = \"\";\r",
													"    for (let i = 0; i < length; i++) {\r",
													"        password += chars.charAt(Math.floor(Math.random() * chars.length));\r",
													"    }\r",
													"    return password;\r",
													"}\r",
													"\r",
													"// Устанавливаем новый пароли\r",
													"const newPassword = generatePassword();\r",
													"\r",
													"pm.environment.set(\"newPassword\", newPassword);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", () => {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has no content\", () => {\r",
													"    pm.expect(pm.response.text()).to.equal(\"\");\r",
													"});\r",
													"\r",
													"// Только если статус 204 — обновляем password\r",
													"if (pm.response.code === 204) {\r",
													"    pm.environment.set(\"password\", pm.environment.get(\"newPassword\"));\r",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currentPassword\": \"{{password}}\",\n  \"newPassword\": \"{{newPassword}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/profile/password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"profile",
												"password"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currentPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/profile/password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"profile",
														"password"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "logout",
							"item": [
								{
									"name": "/api/profile/logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", () => {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has no content\", () => {\r",
													"    pm.expect(pm.response.text()).to.equal(\"\");\r",
													"});\r",
													"\r",
													"// Очистить токены после выхода\r",
													"if (pm.response.code === 204) {\r",
													"    pm.environment.unset(\"accessToken\");\r",
													"    pm.environment.unset(\"refreshToken\");\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/profile/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"profile",
												"logout"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/profile/logout",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"profile",
														"logout"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "/api/profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Пользователь удалён успешно (204)\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"pm.environment.unset(\"accessToken\");\r",
											"pm.environment.unset(\"refreshToken\");\r",
											"\r",
											"console.log(\"Токены очищены из окружения после удаления аккаунта\");\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"profile"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"profile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "reviews",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "exists",
									"item": [
										{
											"name": "/api/reviews/:id/exists",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/reviews/:id/exists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"reviews",
														":id",
														"exists"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/reviews/:id/exists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"reviews",
																":id",
																"exists"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "like",
									"item": [
										{
											"name": "/api/reviews/:id/like",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/reviews/:id/like",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"reviews",
														":id",
														"like"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/reviews/:id/like",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"reviews",
																":id",
																"like"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/api/reviews/:id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/reviews/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"reviews",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/reviews/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"reviews",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/reviews/:id",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"article\": \"<string>\",\n  \"message\": \"<string>\",\n  \"uploadedFiles\": [\n    \"<binary>\",\n    \"<binary>\"\n  ],\n  \"rating\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/reviews/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"reviews",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<uuid>\",\n  \"article\": \"<string>\",\n  \"message\": \"<string>\",\n  \"uploadedFiles\": [\n    \"<binary>\",\n    \"<binary>\"\n  ],\n  \"rating\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/reviews/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"reviews",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/api/reviews/:id",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/reviews/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"reviews",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/reviews/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"reviews",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "product",
							"item": [
								{
									"name": "{productId}",
									"item": [
										{
											"name": "list",
											"item": [
												{
													"name": "/api/reviews/product/:productId/list",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/reviews/product/:productId/list?page=1&pageSize=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"reviews",
																"product",
																":productId",
																"list"
															],
															"query": [
																{
																	"key": "page",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "productId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/reviews/product/:productId/list?page=1&pageSize=20",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"reviews",
																		"product",
																		":productId",
																		"list"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "1"
																		},
																		{
																			"key": "pageSize",
																			"value": "20"
																		}
																	],
																	"variable": [
																		{
																			"key": "productId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "rating",
											"item": [
												{
													"name": "/api/reviews/product/:productId/rating",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/reviews/product/:productId/rating",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"reviews",
																"product",
																":productId",
																"rating"
															],
															"variable": [
																{
																	"key": "productId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/reviews/product/:productId/rating",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"reviews",
																		"product",
																		":productId",
																		"rating"
																	],
																	"variable": [
																		{
																			"key": "productId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "count",
											"item": [
												{
													"name": "/api/reviews/product/:productId/count",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/reviews/product/:productId/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"reviews",
																"product",
																":productId",
																"count"
															],
															"variable": [
																{
																	"key": "productId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/reviews/product/:productId/count",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"reviews",
																		"product",
																		":productId",
																		"count"
																	],
																	"variable": [
																		{
																			"key": "productId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "/api/reviews",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/reviews?ProductId=<uuid>&MinRating=<integer>&MaxRating=<integer>&SortBy=<string>&SortDesc=<boolean>&Page=<integer>&PageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews"
									],
									"query": [
										{
											"key": "ProductId",
											"value": "<uuid>"
										},
										{
											"key": "MinRating",
											"value": "<integer>"
										},
										{
											"key": "MaxRating",
											"value": "<integer>"
										},
										{
											"key": "SortBy",
											"value": "<string>"
										},
										{
											"key": "SortDesc",
											"value": "<boolean>"
										},
										{
											"key": "Page",
											"value": "<integer>"
										},
										{
											"key": "PageSize",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/reviews?ProductId=<uuid>&MinRating=<integer>&MaxRating=<integer>&SortBy=<string>&SortDesc=<boolean>&Page=<integer>&PageSize=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"reviews"
											],
											"query": [
												{
													"key": "ProductId",
													"value": "<uuid>"
												},
												{
													"key": "MinRating",
													"value": "<integer>"
												},
												{
													"key": "MaxRating",
													"value": "<integer>"
												},
												{
													"key": "SortBy",
													"value": "<string>"
												},
												{
													"key": "SortDesc",
													"value": "<boolean>"
												},
												{
													"key": "Page",
													"value": "<integer>"
												},
												{
													"key": "PageSize",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/reviews",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Article",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "Message",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "UploadedFiles",
											"value": "<binary>,<binary>",
											"type": "text"
										},
										{
											"key": "Rating",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "ProductId",
											"value": "<uuid>",
											"type": "text"
										},
										{
											"key": "UserId",
											"value": "<uuid>",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"reviews"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "Article",
													"value": "<string>",
													"type": "text"
												},
												{
													"key": "Message",
													"value": "<string>",
													"type": "text"
												},
												{
													"key": "UploadedFiles",
													"value": "<binary>,<binary>",
													"type": "text"
												},
												{
													"key": "Rating",
													"value": "<integer>",
													"type": "text"
												},
												{
													"key": "ProductId",
													"value": "<uuid>",
													"type": "text"
												},
												{
													"key": "UserId",
													"value": "<uuid>",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/reviews",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"reviews"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "wishlist",
					"item": [
						{
							"name": "toggle",
							"item": [
								{
									"name": "/api/wishlist/toggle",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"productId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/wishlist/toggle",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"wishlist",
												"toggle"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/wishlist/toggle",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"wishlist",
														"toggle"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "{productId}",
							"item": [
								{
									"name": "/api/wishlist/:productId",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/wishlist/:productId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"wishlist",
												":productId"
											],
											"variable": [
												{
													"key": "productId",
													"value": "<uuid>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/wishlist/:productId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"wishlist",
														":productId"
													],
													"variable": [
														{
															"key": "productId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "/api/wishlist",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/wishlist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"wishlist"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/wishlist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"wishlist"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "/api/wishlist",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/wishlist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"wishlist"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"productId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/wishlist",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"wishlist"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "/"
		}
	]
}